<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Outils on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>http://test.code-troopers.com/tags/outils/</link>
    <description>Recent content in Outils on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Thu, 16 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://test.code-troopers.com/tags/outils/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GIT-SVN comment survivre dans un environnement hostile</title>
      <link>http://test.code-troopers.com/2015/07/16/gitsvn</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2015/07/16/gitsvn</guid>
      <description>

&lt;p&gt;Git c’est cool, Git c’est Hype, Git c’est tout récent (&lt;a href=&#34;http://git-scm.com/book/fr/v1/D%C3%A9marrage-rapide-Une-rapide-histoire-de-Git&#34;&gt;enfin presque&lt;/a&gt;) et c’est pour ça qu’on aime bien.
Mais pour beaucoup Git c’est nouveau, donc c’est le changement, donc c’est compliqué, et c’est pour ça que plein de boîtes préfèrent garder leur serveur svn.&lt;/p&gt;

&lt;p&gt;Je vais tenter ici, de vous donner les principales commandes de &lt;code&gt;Git-SVN&lt;/code&gt;. Ainsi si vous vous trouvez dans une boîte qui ne veut pas changer son scm mais que vous, vous avez envie de changement,
vous pourrez donc utiliser la puissance de Git.
Et ce sans aucun impact sur le gestionnaire de sources de la société dans laquelle vous êtes. C&amp;rsquo;est génial non ?&lt;/p&gt;

&lt;h2 id=&#34;prérequis:670b5efaab07fcd0dc591466ac7460f0&#34;&gt;Prérequis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Avoir Git-SVN d&amp;rsquo;installé ! Et ce qui est bien fait, c&amp;rsquo;est que Git-SVN fait partie intégrante de Git. C&amp;rsquo;est donc Git que vous allez installer : &lt;a href=&#34;http://www.git-scm.com&#34;&gt;www.git-scm.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Un accès au svn (l&amp;rsquo;url du projet qui vous intéresse fera largement l&amp;rsquo;affaire)&lt;/li&gt;
&lt;li&gt;Un terminal&lt;/li&gt;
&lt;li&gt;Un tout petit peu de courage&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;init-du-projet:670b5efaab07fcd0dc591466ac7460f0&#34;&gt;Init du Projet&lt;/h2&gt;

&lt;p&gt;Le cas le plus courant est celui où tout le monde travaille sur le trunk du projet, et je vais partir de ce cas pour ce guide.
Si ce n&amp;rsquo;est pas le cas, il n&amp;rsquo;y a pas de gros changement, mais je vous invite à consulter plus en détail &lt;a href=&#34;https://git-scm.com/docs/git-svn&#34;&gt;la doc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Donc si on se met dans la situation où tout le monde travaille sur le trunk, pour récupérer les sources du projet dans un nouveau répertoire vous devrez faire un :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn clone http://maboite/svn/monBeauProjet/ -s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Par contre dès que le repo svn est un peu vieux (i.e. avec plein de commits) ça va mettre 3h ! En effet, Git va prendre les révisions une par une afin de créer son historique local.
Si vous n’avez pas besoin de tout l’historique des révisions ce que vous pouvez faire c’est :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn clone http://maboite/svn/monBeauProjet/ -s -r4000:HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ainsi il ne crééra l’histo qu’à partir de la révision 4000 du svn. Je vous conseille donc de prendre le 4000 le plus proche de la dernière révision.&lt;/p&gt;

&lt;p&gt;À partir de là c’est bon, vous avez votre projet qui est géré par Git. La preuve vous pouvez tester via ces différentes commandes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status
git branch -a
git log -n5
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;travailler-sur-le-projet-en-local:670b5efaab07fcd0dc591466ac7460f0&#34;&gt;Travailler sur le projet (en local)&lt;/h2&gt;

&lt;p&gt;Vous pouvez donc dès à présent commencer à travailler offline ou bien sans vous soucier des commits de vos collègues.
Et cela avec tous les avantages que Git apporte.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -m&amp;quot;Ajout de la modification du mot de passe par l&#39;admin&amp;quot;
git stash save “Début de ma tâche prioritaire”
... // un peu de travail urgent
git stash pop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On peut même faire des branches Git (en local) sans que cela n&amp;rsquo;impacte le serveur.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout -b myLocalBranch
... // du travail avec plein de petits commits
git checkout master
git merge myLocalBranch
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;commiter-sur-le-svn:670b5efaab07fcd0dc591466ac7460f0&#34;&gt;Commiter sur le svn&lt;/h2&gt;

&lt;p&gt;Ensuite pour se synchroniser avec vos collègues (c&amp;rsquo;est mieux) les deux commandes indispensables sont&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn rebase
git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le &lt;code&gt;git svn rebase&lt;/code&gt; va faire l&amp;rsquo;équivalent d&amp;rsquo;un svn update quant au &lt;code&gt;git svn dcommit&lt;/code&gt; ça sera un svn commit.&lt;/p&gt;

&lt;h2 id=&#34;bonus-utiliser-des-branches:670b5efaab07fcd0dc591466ac7460f0&#34;&gt;Bonus : Utiliser des branches&lt;/h2&gt;

&lt;p&gt;Bon soyons honnêtes si vous utilisez un svn il y a quand même peu de chances que les branches soient vraiment utilisées (ou alors peut-être que vous aimez la douleur). Mais si ça arrive, voilà comment les utiliser.&lt;/p&gt;

&lt;p&gt;Mettre à jour toutes les branches du svn :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn fetch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Changer de branche :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout -b &amp;lt;brancheDistante&amp;gt; &amp;lt;nomDeBrancheLocale&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et maintenant vous pouvez naviguer entre vos branches normalement via Git  :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout master
git checkout nomDeBrancheLocale
git checkout -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;et par exemple pour recopier un commit d&amp;rsquo;une branche à une autre sans copier manuellement le fichier.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git cherry-pick
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Voilà vous avez maintenant les bases pour utiliser Git alors que de premier abord cela ne semblait pas possible.
Il ne vous reste plus qu&amp;rsquo;à forcer un peu plus pour remplacer l&amp;rsquo;ancien serveur svn par un nouveau sous Git et comme ça toute votre boîte pourra en profiter.
&lt;br/&gt;
&lt;br/&gt;
Pour connaître les principales commandes Git, je vous invite à consulter &lt;a href=&#34;http://git-scm.com/docs/gittutorial&#34;&gt;la page tutoriel de Git&lt;/a&gt; ou alors de chercher sur &lt;a href=&#34;http://lmgtfy.com/?q=git+commands&#34;&gt;internet&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Suivre l&#39;humeur de son équipe avec TeamMood</title>
      <link>http://test.code-troopers.com/2015/02/11/teammood</link>
      <pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2015/02/11/teammood</guid>
      <description>&lt;p&gt;Depuis bientôt 6 mois l&amp;rsquo;équipe des Code-Troopers utilise &lt;a href=&#34;https://www.teammood.com/&#34;&gt;TeamMood&lt;/a&gt; pour suivre son bonheur au quotidien. Retour sur l&amp;rsquo;utilisation d&amp;rsquo;un outil fort sympathique.&lt;/p&gt;

&lt;p&gt;Si l&amp;rsquo;on remonte quelques années en arrière, lorsque nous travaillions encore tous les 7 pour SRMvision,
nous avions expérimenté un outil sur un grand tableau blanc pour connaître notre état d&amp;rsquo;esprit à la fin de chaque journée de travail.
Nous l&amp;rsquo;appelions à l&amp;rsquo;époque &lt;code&gt;happiness chart&lt;/code&gt; (d&amp;rsquo;autres l&amp;rsquo;appellent aussi &lt;code&gt;niko-niko&lt;/code&gt;).
Toute l&amp;rsquo;équipe a rapidement adhéré au principe, car, dans la façon dont nous avions établi les règles, nous pouvions dessiner ce que l&amp;rsquo;on souhaitait dans notre case, seule la couleur importait :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vert = Content ;&lt;/li&gt;
&lt;li&gt;Bleu = Neutre ;&lt;/li&gt;
&lt;li&gt;Rouge = Pas content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On avait régulièrement droit à toutes sortes de dessins, du simple smiley au gribouillis le plus improbable.
(Je suis assez déçu de n&amp;rsquo;avoir retrouvé aucune photo de ces grands moments d&amp;rsquo;art)&lt;/p&gt;

&lt;p&gt;Le problème que nous avions relevé alors était principalement l&amp;rsquo;assiduité de remplissage.
En effet, même si pour partir le soir on passait dans la salle où se trouvait le tableau à remplir, on n&amp;rsquo;y pensait pas forcément (trop pressé de rentrer chez soi).
Il n&amp;rsquo;était donc pas rare qu&amp;rsquo;il y ait des trous, comblés sans conviction le lendemain matin.&lt;/p&gt;

&lt;p&gt;C&amp;rsquo;est là où &lt;a href=&#34;https://www.teammood.com/&#34;&gt;TeamMood&lt;/a&gt; entre en action avec une grosse valeur ajoutée : l&amp;rsquo;envoi d&amp;rsquo;un mail quotidien !
Plus d&amp;rsquo;excuse pour oublier de voter, il suffit de cliquer sur le lien qui correspond à notre humeur du jour dans le mail reçu,
c&amp;rsquo;est super simple et rapide, ça marche par téléphone, ça peut se faire dans le bus sur le trajet du retour.
Et si on se plante, parce qu&amp;rsquo;on a des gros doigts sur un petit écran, on peut revoter dans la foulée, ça permet d&amp;rsquo;écraser son propre vote du jour.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;http://test.code-troopers.com/images/postTeammood/mailBig.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Mail du vote quotidien&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postTeammood/mailBig.png&#34; alt=&#34;Mail du vote quotidien&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;http://test.code-troopers.com/images/postTeammood/mailPhone.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Mail du vote quotidien sur téléphone&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postTeammood/mailPhone.png&#34; alt=&#34;Mail du vote quotidien sur téléphone&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Ensuite on retombe sur le fonctionnement souhaité : en fonction de son vote, on voit apparaître son &lt;em&gt;mood&lt;/em&gt;  avec une palette de couleurs et de smileys simples à comprendre en un coup d&amp;rsquo;œil.
Avec un peu d&amp;rsquo;historique on peut aussi apprécier via des stats simples l&amp;rsquo;évolution de l&amp;rsquo;humeur de l&amp;rsquo;équipe sur du plus long terme.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;http://test.code-troopers.com/images/postTeammood/quotidien.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postTeammood/quotidien.png&#34; alt=&#34;&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;http://test.code-troopers.com/images/postTeammood/stat.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postTeammood/stat.png&#34; alt=&#34;&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Finalement il ne reste plus qu&amp;rsquo;à exploiter ces données. Et là, libre à chacun (et à chaque équipe) de l&amp;rsquo;interpréter comme il le souhaite.
De notre côté nous avons expérimenté plusieurs façons de faire :
une revue en rétro de fin de sprint, une alerte au daily le lendemain d&amp;rsquo;un jour…
Cela demande plus ou moins de temps afin de trouver une méthode efficace pour tirer bénéfice de ces informations.
En général, plus on attend plus le souvenir s&amp;rsquo;estompe et donc le problème est amoindri, ce qui, à mon avis, n&amp;rsquo;est pas une bonne chose.
Mais là c&amp;rsquo;est vraiment chacun ses goûts.&lt;/p&gt;

&lt;p&gt;Que dire de plus ?
&lt;a href=&#34;https://www.teammood.com/&#34;&gt;TeamMood&lt;/a&gt; est un produit français (un de plus) développé à Toulouse par &lt;a href=&#34;https://twitter.com/ndeverge&#34;&gt;Nicolas Deverge&lt;/a&gt;.
C&amp;rsquo;est encore en bêta, mais ça fonctionne parfaitement (aucun problème à signaler depuis qu&amp;rsquo;on l&amp;rsquo;utilise).
Je sais que la roadmap est bien remplie, mais la prochaine fonctionnalité qu&amp;rsquo;on attend c&amp;rsquo;est la gestion des congés/absences, histoire de ne pas être dérangé pendant les vacances.&lt;/p&gt;

&lt;p&gt;Conclusion :
je le recommande à toutes les équipes qui sont prêtes à se prendre en main pour faire bouger les choses afin d&amp;rsquo;être heureuses au quotidien.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>