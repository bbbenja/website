<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Permission on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>https://blog-7460a.firebaseapp.com/tags/permission/</link>
    <description>Recent content in Permission on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Tue, 22 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog-7460a.firebaseapp.com/tags/permission/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android M - Nouvelle gestion de permission</title>
      <link>https://blog-7460a.firebaseapp.com/2015/09/22/android_m_permissions</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/09/22/android_m_permissions</guid>
      <description>

&lt;h1 id=&#34;nouvelle-approche:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Nouvelle approche&lt;/h1&gt;

&lt;p&gt;Avec la prochaine release d&amp;rsquo;&lt;code&gt;Android 6.0 Marshmallow&lt;/code&gt;, il va y avoir du changement au niveau de la gestion des permissions.
Terminé la popup qui demande les 10 autorisations au moment du téléchargement de l&amp;rsquo;appli, maintenant les développeurs vont pouvoir demander les permissions au moment où elles seront nécessaires.&lt;/p&gt;

&lt;h3 id=&#34;permissions-irrévocables:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Permissions irrévocables&lt;/h3&gt;

&lt;p&gt;Puisqu&amp;rsquo;il va falloir demander à l&amp;rsquo;utilisateur pour chaque permission, Google a décidé que certaines anciennes permissions n&amp;rsquo;auront plus besoin d&amp;rsquo;être demandées,
 ce sont les &lt;code&gt;Normal Permissions&lt;/code&gt;. Il s&amp;rsquo;agit des permissions qui n&amp;rsquo;engendrent pas de risque sur la vie privée ou sur la sécurité de l&amp;rsquo;utilisateur comme c&amp;rsquo;est par exemple le cas pour l&amp;rsquo;accès à internet ou l&amp;rsquo;accès au vibreur :
 la liste complète est disponible &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html#normal&#34;&gt;ici&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;guidelines:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Guidelines&lt;/h3&gt;

&lt;p&gt;Pour ce qui est de l&amp;rsquo;UX, Google a fait plusieurs recommandations dont certaines sont plus importantes que d&amp;rsquo;autres, à mon avis :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ne demander une permisission qu&amp;rsquo;au moment où l&amp;rsquo;on en a vraiment besoin, ce qui implique de ne pas avoir un popup au lancement qui va demander toutes les permissions ;&lt;/li&gt;
&lt;li&gt;Faire le maximum pour ne pas gâcher l&amp;rsquo;experience utilisateur même s&amp;rsquo;il refuse une permission : donc prévoir un mode dégradé autant que possible ;&lt;/li&gt;
&lt;li&gt;Utiliser les méthodes disponibles dans appcompat plutôt que celles du sdk de base.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mise-en-pratique:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Mise en pratique&lt;/h1&gt;

&lt;p&gt;Avant de commencer à coder, une dernière chose à garder à l&amp;rsquo;esprit c&amp;rsquo;est que l&amp;rsquo;utilisateur peut à tout moment révoquer une permission via le détail de l&amp;rsquo;application (même une fois que l&amp;rsquo;appli est lancée et tourne en background).
 Il faudra donc adapter la gestion de ces permissions à cette éventualité.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p6.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran App Info&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p6.png&#34; alt=&#34;Écran App Info&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p5.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran App Info : détail des permissions&#34;  class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p5.png&#34; alt=&#34;Écran App Info : détail des permissions&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;ne-pas-implémenter-les-nouvelles-permissions:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Ne pas implémenter les nouvelles permissions&lt;/h2&gt;

&lt;p&gt;Chose importante à savoir, vous n&amp;rsquo;êtes pas obligés d&amp;rsquo;implémenter cette nouvelle gestion de permission.
En effet, puisqu&amp;rsquo;elle demande du développoment supplémentaire, de nombreuses applis ne seront pas mises à jour et garderont donc l&amp;rsquo;ancien fonctionnement.
Si c&amp;rsquo;est ce que vous souhaitez, et pour ne pas nuire au bon fonctionnement de votre appli, il vous suffit de ne pas cibler le dernier &lt;code&gt;sdk&lt;/code&gt; dans votre build.gradle et de rester sur le &lt;code&gt;22&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;implémenter-les-nouvelles-permissions:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Implémenter les nouvelles permissions&lt;/h2&gt;

&lt;p&gt;Pour cela, 3 étapes sont nécessaires, principalement disponibles dans le sdk 23 ainsi que dans la lib appcompat :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requestPermissions()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onRequestPermissionsResult()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shouldShowRequestPermissionRationale()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;build-gradle:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Build.gradle&lt;/h3&gt;

&lt;p&gt;Permière étape, cibler la dernier version du &lt;code&gt;sdk&lt;/code&gt; : &lt;code&gt;23&lt;/code&gt;.
Et en bonus, importer appcompat pour bénéficier des méthodes helpers de Google.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;compileSdkVersion 23
defaultConfig {
    targetSdkVersion 23
}
dependencies {
    compile &#39;com.android.support:appcompat-v7:23.0.1&#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;androidmanifest-xml:84bad094dd5fba286487f6a75a705f1d&#34;&gt;AndroidManifest.xml&lt;/h3&gt;

&lt;p&gt;Ensuite, déclarer les permissions désirées dans l&amp;rsquo;application, normalement il n&amp;rsquo;y a pas de changements par rapport à votre configuration actuelle&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.CAMERA&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_CONTACTS&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.SEND_SMS&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_EXTERNAL_STORAGE&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.CALL_PHONE&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;N&amp;rsquo;oubliez pas d&amp;rsquo;y déclarer aussi les &lt;code&gt;Normal Permissions&lt;/code&gt; qui, bien qu&amp;rsquo;elles soient automatiquement accordées, ont toujours besoin d&amp;rsquo;être déclarées.&lt;/p&gt;

&lt;h3 id=&#34;dans-une-activité:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Dans une activité&lt;/h3&gt;

&lt;p&gt;Dans un premier temps il faut vérifier si une permission est déjà accordée ou non&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ContextCompat.checkSelfPermission(context, Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si la permission n&amp;rsquo;est pas accordée, il va falloir la demander, de préférence lors d&amp;rsquo;une action utilisateur, par exemple au click sur un bouton&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.CAMERA},
                                  REQUEST_CODE_ONE);
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p1.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande d&#39;une permission&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p1.png&#34; alt=&#34;Dialog de demande d&#39;une permission&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Puis écouter le choix de l&amp;rsquo;utilisateur, dans l&amp;rsquo;activité ou le fragment correspondant&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Override
public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    switch (requestCode) {
        case REQUEST_CODE_ONE: {
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(this, &amp;quot;Permission granted&amp;quot;, Toast.LENGTH_LONG).show();
            } else {
                Toast.makeText(this, &amp;quot;Permission denied&amp;quot;, Toast.LENGTH_LONG).show();
            }
            return;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;demander-plusieurs-permissions-en-même-temps:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Demander plusieurs permissions en même temps&lt;/h3&gt;

&lt;p&gt;Même si cela est déconseillé, il peut arriver d&amp;rsquo;avoir besoin de plusieurs permissions lors de la même action utilisateur.
Pour cela il suffit de passer plusieurs permissions dans le tableau passé en paramètre du requestPermission&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.READ_CONTACTS, Manifest.permission.ACCESS_FINE_LOCATION},
                                  REQUEST_CODE_TWO);
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p2.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande de plusieurs permissions 1/2&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p2.png&#34; alt=&#34;Dialog de demande de plusieurs permissions 1/2&#34;/&gt;
    &lt;/a&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p3.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande de plusieurs permissions 2/2&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p3.png&#34; alt=&#34;Dialog de demande de plusieurs permissions 2/2&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;expliquer-à-l-utilisateur-pourquoi-il-doit-autoriser-une-permission:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Expliquer à l&amp;rsquo;utilisateur pourquoi il doit autoriser une permission&lt;/h3&gt;

&lt;p&gt;Il arrivera sûrement que certains utilsateurs refusent des permissions et que cela détériore l&amp;rsquo;expérience utilisateur sur l&amp;rsquo;application. Pour cela, Google fourni un helper pour savoir ou non s&amp;rsquo;il faut afficher un message d&amp;rsquo;information à l&amp;rsquo;utilisateur (graphique).
Cela se fera avec la méthode shouldShowRequestPermissionRationale&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (shouldShowRequestPermissionRationale(Manifest.permission.CALL_PHONE)) {
     new AlertDialog.Builder(MainActivity.this)
                               .setMessage(&amp;quot;Custom message to explain why you need a permission&amp;quot;)
                               .setPositiveButton(&amp;quot;OK&amp;quot;, new DialogInterface.OnClickListener() {
                                   @Override
                                   public void onClick(DialogInterface dialog, int which) {
                                       ActivityCompat.requestPermissions(MainActivity.this,
                                               new String[]{Manifest.permission.CALL_PHONE},
                                               REQUEST_CODE_FIVE);
                                   }
                               })
                               .setNegativeButton(&amp;quot;Cancel&amp;quot;, null)
                               .create()
                               .show();
}
ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.CALL_PHONE},
                                  REQUEST_CODE_FIVE);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p4.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog d&#39;explication sur une demande de permissions&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p4.png&#34; alt=&#34;Dialog d&#39;explication sur une demande de permissions&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;le-piège-à-éviter:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Le piège à éviter&lt;/h3&gt;

&lt;p&gt;Penser à vérifier régulièrement l&amp;rsquo;état des permissions dans le &lt;em&gt;onResume()&lt;/em&gt; de vos Activity ou Fragment, étant donné que l&amp;rsquo;utilsateur peut à tout moment les révoquer cela permettra d&amp;rsquo;éviter de nombreux crashs.&lt;/p&gt;

&lt;h2 id=&#34;resources:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Resources&lt;/h2&gt;

&lt;p&gt;Code source d&amp;rsquo;exemple : &lt;a href=&#34;https://github.com/fchauveau/android-permissions-sample&#34;&gt;https://github.com/fchauveau/android-permissions-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doc développeur Android : &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html&#34;&gt;https://developer.android.com/preview/features/runtime-permissions.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Guidelines Android : &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html&#34;&gt;http://www.google.fr/design/spec/patterns/permissions.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explication sur quand demander une permission : &lt;a href=&#34;https://www.youtube.com/watch?v=iZqDdvhTZj0&#34;&gt;https://www.youtube.com/watch?v=iZqDdvhTZj0&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>