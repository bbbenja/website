<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Macro on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>https://blog-7460a.firebaseapp.com/tags/macro/</link>
    <description>Recent content in Macro on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog-7460a.firebaseapp.com/tags/macro/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Macro Vim : C&#39;est trop génial</title>
      <link>https://blog-7460a.firebaseapp.com/2016/05/11/vim_macro</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2016/05/11/vim_macro</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Comme certains d&amp;#8217;entre vous le savent, j&amp;#8217;aime beaucoup Vim. Il n&amp;#8217;y a pas très longtemps au Tours JUG, je disais que je n&amp;#8217;avais pas de cas d&amp;#8217;utilisation des macro dans Vim dont certains disent que c&amp;#8217;est LA killer feature. Et bien j&amp;#8217;ai trouvé un use case et « c&amp;#8217;est trop génial ! » comme dirait Agnès.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-05-VimMacro/trop_genial.gif&#34; data-lightbox=&#34;0&#34; title=&#34;trop génial&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-05-VimMacro/trop_genial.gif&#34; alt=&#34;trop génial&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_angular2_et_macros_vim&#34;&gt;Angular2 et macros Vim&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les vidéos de Devoxx 2016 sont sorties, dont &lt;a href=&#34;https://www.youtube.com/watch?v=5U4OasGuo0o&#34;&gt;Angular 2 : Préparez vous dès maintenant à la migration (Benoit Lemoine)&lt;/a&gt;. Une des étapes est de passer par les ControllerAs, je ne vais pas refaire la conf ce n&amp;#8217;est pas le but. Bref, je travaille sur un projet qui définit les controllers comme ceci :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$routeProvider.when(&#39;/admin/displayMail&#39;, {templateUrl: &#39;partials/display_mail.html&#39;, controller: &#39;ListMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail/:id&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;});
$routeProvider.when(&#39;/admin/displayUsers&#39;, {templateUrl: &#39;partials/display_users.html&#39;, controller: &#39;DisplayUsersCtrl&#39;});
$routeProvider.when(&#39;/admin/createUser&#39;, {templateUrl: &#39;partials/create_user.html&#39;, controller: &#39;CreateUserCtrl&#39;});
$routeProvider.when(&#39;/admin/updateUser/:login&#39;, {templateUrl: &#39;partials/update_user.html&#39;, controller: &#39;UpdateUserCtrl&#39;});&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Je veux rajouter pour chaque ligne un &lt;code&gt;controllerAs: &#39;monCtrl&#39;&lt;/code&gt; avec comme nom le même que le controller associé mais en commençant par une minuscule, et donc obtenir les lignes ci-dessous. J&amp;#8217;ai extrait 6 controllers mais en réalité il y en a plutôt une cinquantaine (les noms ont été changés si on me demande).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$routeProvider.when(&#39;/admin/displayMail&#39;, {templateUrl: &#39;partials/display_mail.html&#39;, controller: &#39;ListMailCtrl&#39;, controllerAs: &#39;listMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;, controllerAs: &#39;editMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail/:id&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;, controllerAs: &#39;editMailCtrl&#39;});
$routeProvider.when(&#39;/admin/displayUsers&#39;, {templateUrl: &#39;partials/display_users.html&#39;, controller: &#39;DisplayUsersCtrl&#39;, controllerAs: &#39;displayUsersCtrl&#39;});
$routeProvider.when(&#39;/admin/createUser&#39;, {templateUrl: &#39;partials/create_user.html&#39;, controller: &#39;CreateUserCtrl&#39;, controllerAs: &#39;createUserCtrl&#39;});
$routeProvider.when(&#39;/admin/updateUser/:login&#39;, {templateUrl: &#39;partials/update_user.html&#39;, controller: &#39;UpdateUserCtrl&#39;, controllerAs: &#39;updateUserCtrl&#39;});&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;qa&lt;/code&gt; : on commence la macro, on enregistre dans a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/controller:&amp;lt;enter&amp;gt;&lt;/code&gt; : on recherche controller:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eeee&lt;/code&gt; : on se déplace de mot en mot pour arriver sur le nom du controller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yi&#39;&lt;/code&gt; : on copie tout ce qui se trouve à l&amp;#8217;intérieur des &#39; (le nom du controller donc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ela&lt;/code&gt; : on se déplace vers la droite et on passe en insertion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;controllerAs: &#39;&#39;&amp;lt;Esc&amp;gt;&lt;/code&gt; : on écrit le texte et on repasse en mode normal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hp&lt;/code&gt; : on passe sur la première &#39; et on copie le texte précédemment copié&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bgur&lt;/code&gt; : on se place au début du mot et on passe la première lettre en minuscule&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;q&lt;/code&gt; : fin de l&amp;#8217;enregistrement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;50@a&lt;/code&gt; : on joue la macro 50 fois&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ce qui donne :
&lt;code&gt;qa/controller:&amp;lt;enter&amp;gt;eeeeyi&amp;#8217;era, controllerAs: &#39;&#39;&amp;lt;Esc&amp;gt;cpbgurq50@a&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Juste en lisant le texte, on a l&amp;#8217;impression que c&amp;#8217;est compliqué, avec les explications j&amp;#8217;espère que ça paraît plus simple, en tout cas ça l&amp;#8217;est avec l&amp;#8217;habitude. Cela paraît long aussi mais au final c&amp;#8217;est rapide à taper, il suffit de voir la vidéo qui est en vitesse réelle :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center;margin:50px;&#34;&gt;
&lt;video style=&#34;width: 100%;&#34; controls src=&#34;https://blog-7460a.firebaseapp.com/videos/vim_macro.webm&#34;&gt;&lt;/video&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>