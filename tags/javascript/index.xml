<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>https://blog-7460a.firebaseapp.com/tags/javascript/</link>
    <description>Recent content in Javascript on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 10 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog-7460a.firebaseapp.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Améliorer la complétion JavaScript d&#39;IntelliJ IDEA</title>
      <link>https://blog-7460a.firebaseapp.com/2015/06/10/completionjavascriptdansintellij</link>
      <pubDate>Wed, 10 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/06/10/completionjavascriptdansintellij</guid>
      <description>

&lt;h1 id=&#34;intellij-idea:704fd24739acbd1854643e7dcb3c357a&#34;&gt;IntelliJ IDEA&lt;/h1&gt;

&lt;p&gt;Tout le monde sait que nous adorons utiliser IntelliJ IDEA pour développer.
Peu importe le langage IntelliJ est vraiment un excellent IDE qui nous permet d&amp;rsquo;être efficaces quasiment instantanément.&lt;/p&gt;

&lt;p&gt;Par contre, quand on arrive dans le monde du JavaScript on peut avoir quelques soucis pour être
dans un environnement suffisamment typé où l&amp;rsquo;on sait ce qu&amp;rsquo;on va faire sans se poser trop de questions,
ou tout simplement pouvoir bénéficier de l&amp;rsquo;aide de l&amp;rsquo;IDE pour savoir de quelles méthodes on dispose.&lt;/p&gt;

&lt;h2 id=&#34;javascript-dans-intellij:704fd24739acbd1854643e7dcb3c357a&#34;&gt;JavaScript dans IntelliJ&lt;/h2&gt;

&lt;p&gt;Par défaut, IntelliJ est déjà suffisament malin pour scanner les fichiers du workspace
et trouver de la complétion en automatique (ainsi que la JSDoc).&lt;/p&gt;

&lt;p&gt;Cependant, ce mécanisme ne marche pas à tous les coups :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vous utilisez des versions sur des CDN&lt;/li&gt;
&lt;li&gt;vous avez des versions minifiées dans votre workspace&lt;/li&gt;
&lt;li&gt;vous utilisez des outils qui impliquent certains framework (karma / jasmine / mocha&amp;hellip;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;faire-comprendre-le-javascript-à-intellij:704fd24739acbd1854643e7dcb3c357a&#34;&gt;Faire comprendre le JavaScript à IntelliJ&lt;/h2&gt;

&lt;p&gt;Pour réussir à obtenir une complétion correcte vous avez plusieurs solutions :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pour les CDN, vous pouvez demander à IntelliJ de récupérer la ressource (il ne la mettra pas dans votre projet pour autant)&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/cdndl.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Le téléchargement des fichiers sur un CDN [alt+entrée]&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/cdndl.png&#34; alt=&#34;Le téléchargement des fichiers sur un CDN [alt+entrée]&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;pour les versions minifiées, vous pouvez ajouter manuellement les bibliothèques dans la fenêtre de paramètres (Languages &amp;amp; Frameworks &amp;gt; JavaScript &amp;gt; Libraries)&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/settings.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;La fenêtre des paramètres&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/settings.png&#34; alt=&#34;La fenêtre des paramètres&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;la-mega-astuce:704fd24739acbd1854643e7dcb3c357a&#34;&gt;LA mega astuce&lt;/h2&gt;

&lt;p&gt;IntelliJ est capable de comprendre le TypeScript, et des gens ont eu la bonne idée de regrouper des définitions TypeScript pour
la plupart des librairies les plus utilisées dans un dépôt Github : &lt;a href=&#34;http://www.definitelytyped.org&#34;&gt;DefinitelyTyped&lt;/a&gt;.
Dans la fenêtre de création de librairie JavaScript, dans la partie qui permet le téléchargement d&amp;rsquo;une librairie,
sélectionnez la source &amp;ldquo;TypeScript Community Stubs&amp;rdquo;, vous verrez qu&amp;rsquo;il y a beaucoup de librairies que vous utilisez au quotidien.&lt;/p&gt;

&lt;p&gt;Avec ceci, vous aurez une complétion efficace, avec le typage offert par TypeScript (dans la mesure du possible),
ainsi qu&amp;rsquo;une documentation précise (pour la plupart des librairies).&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/example.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Jasmine est bien connu par IntelliJ&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-06-JavaScriptIntelliJ/example.png&#34; alt=&#34;Jasmine est bien connu par IntelliJ&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>jsTrac l&#39;outil de déclaration de ticket à plugger</title>
      <link>https://blog-7460a.firebaseapp.com/2013/07/08/postjstrac</link>
      <pubDate>Mon, 08 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2013/07/08/postjstrac</guid>
      <description>&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;
    Comme tout développeur le sait (mais ne l&#39;admettra jamais), son travail n&#39;est pas parfait.
    Il est donc nécessaire de réaliser une phase de recette de nos applications avant de les livrer.
    Même si de nombreux outils existent pour référencer les bugs (trac, jira...), cette phase est souvent laborieuse.
    Nous avons donc décidé de simplifier ce processus en créant &lt;b&gt;jsTrac&lt;/b&gt;.
&lt;/p&gt;

&lt;br/&gt;
&lt;h3&gt;jsTrac&lt;/h3&gt;

&lt;p&gt;
    Il s&#39;agit d&#39;un outil visant à fluidifier la recette de sites web en créant rapidement des rapports de bug sur le
    logiciel
    de gestion des tickets &lt;a href=&#34;http://trac.edgewall.org/&#34;&gt;trac&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Les principales fonctionnalités sont les suivantes :
&lt;ul&gt;
    &lt;li&gt;impression d&#39;écran de la page visionnée ;&lt;/li&gt;
    &lt;li&gt;mise en évidence de zones à l&#39;aide de rectangles colorés et de flèches ;&lt;/li&gt;
    &lt;li&gt;ajout d&#39;annotations ;&lt;/li&gt;
    &lt;li&gt;masquage d&#39;informations ;&lt;/li&gt;
    &lt;li&gt;pré-remplissage du formulaire de création du ticket avec des informations utiles (url,login…) ;&lt;/li&gt;
    &lt;li&gt;mise-à-jour des tickets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

&lt;br/&gt;
&lt;h3&gt;Comment ça marche ?&lt;/h3&gt;
&lt;h4&gt;1. Déclarer un bug&lt;/h4&gt;
&lt;p&gt;
    Pour pouvoir déclarer un bug, il suffit d&#39;ajouter un bouton dans votre page. Celui-ci devra exécuter une fonction
    javascript permettant d&#39;appeler l&#39;interface de &lt;b&gt;jsTrac&lt;/b&gt;.
    &lt;br/&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/altS.png&#34; data-lightbox=&#34;image-1&#34; title=&#34;Bouton de lancement de jsTrac&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/altS.png&#34; alt=&#34;Bouton de lancement de jsTrac&#34;/&gt;
    &lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;
    De notre côté, nous l&#39;avons aussi associé à un raccourci clavier.
    On pourrait aussi l&#39;imaginer sous forme d&#39;un bookmarklet ou d&#39;un script grease-monkey, donc complètement
    décorellé du site à recetter.
&lt;/p&gt;

&lt;h4&gt;2. Annoter le screenshot&lt;/h4&gt;
&lt;p&gt;
    Lorsque le script est exécuté, une boîte à outils s&#39;ouvre offrant la possibilité d&#39;ajouter des informations sur la
    page courante.
    Il est alors possible d&#39;ajouter des cadres, flêches, et même du texte. Dans un souci de confidentialité, il est
    aussi possible de noircir certaines zones de la page afin d&#39;en masquer le contenu.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/dessin.png&#34; data-lightbox=&#34;image-2&#34; title=&#34;Création flèche et rectangle&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/dessin.png&#34; alt=&#34;Création flèche et rectangle&#34;/&gt;
&lt;/a&gt;
&lt;/p&gt;


&lt;h4&gt;3. Création du ticket&lt;/h4&gt;

&lt;p&gt;
    Une fois les modifications validées, l&#39;image est générée, et le formulaire de création du ticket apparait.
    Les deux champs principaux à remplir sont le nom et la description du ticket. En fonction de la configuration
    utilisée, certain champs peuvent être pré-rempli, comme le jalon et le composant (qui sont également dépendant
    de la configuration du serveur Trac).
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/creation_ticket.png&#34; data-lightbox=&#34;image-3&#34; title=&#34;Création ticket trac&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/creation_ticket.png&#34; alt=&#34;Création ticket trac&#34;/&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;h4&gt;4. Le ticket dans Trac&lt;/h4&gt;
&lt;p&gt;
    Les personnes en charge de la résolution des tickets verront apparaître le nouveau ticket dans trac avec le
    screenshot lié. De plus dans notre utilisation, le ticket contient des informations supplémentaires telles que l&#39;url
    de la page consultée, la personne connectée, la société… Il est possible d&#39;adapter le contenu du ticket à vos
    besoins.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/ticket_trac.png&#34; data-lightbox=&#34;image-4&#34; title=&#34;ticket trac créé&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postJsTrac/ticket_trac.png&#34; alt=&#34;ticket trac créé&#34;/&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;br/&gt;
&lt;h3&gt;Bénéfices&lt;/h3&gt;
&lt;p&gt;Suite à l&#39;utilisation quotidienne de &lt;b&gt;jsTrac&lt;/b&gt;, nous avons constaté :&lt;/p&gt;
&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Gain de temps à la déclaration des tickets&lt;/li&gt;
        &lt;ul&gt;
            &lt;li&gt;Pas besoins de faire le screenshot&lt;/li&gt;
            &lt;li&gt;Pas besoins d&#39;ouvrir &#34;paint&#34; pour y ajouter des informations&lt;/li&gt;
            &lt;li&gt;Pas besoins de se connecter sur une autre page pour créer un ticket&lt;/li&gt;
            &lt;li&gt;Réduit la perte du contexte lors de la recette&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;Traitement des tickets améliorés&lt;/li&gt;
        &lt;ul&gt;
            &lt;li&gt;La présence systématique d&#39;un screenshot aide à la compréhension du bug&lt;/li&gt;
            &lt;li&gt;Les informations supplémentaires aident à la résolution&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/ul&gt;
&lt;/p&gt;

&lt;br/&gt;
&lt;h3&gt;Comment installer jsTrac ?&lt;/h3&gt;

&lt;p&gt;
    &lt;b&gt;jsTrac&lt;/b&gt; est disponible sur &lt;a href=&#34;https://github.com/srmvision/jsTrac&#34;&gt;GitHub&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
    Pour la mise en place et la configuration les informations nécessaires se trouvent dans la description du projet.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>