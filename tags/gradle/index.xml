<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gradle on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>https://blog-7460a.firebaseapp.com/tags/gradle/</link>
    <description>Recent content in Gradle on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 04 Nov 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog-7460a.firebaseapp.com/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android : Publier son apk en ligne de commande</title>
      <link>https://blog-7460a.firebaseapp.com/2015/11/04/android_publier_apk_avec_gradle</link>
      <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/11/04/android_publier_apk_avec_gradle</guid>
      <description>

&lt;p&gt;Lorsque l’on fait du développement Android, on a régulièrement besoin de publier des nouvelles versions de l&amp;rsquo;application sur le Play Store.
Il est assez fastidieux de devoir se connecter à l’interface de Google, de sélectionner le projet et ensuite d’uploader son nouvel apk.&lt;/p&gt;

&lt;p&gt;Heureusement pour nous, Google a prévu le coup avec une API que l’on peut attaquer en ligne de commande.
Et, encore plus sympa, &lt;a href=&#34;https://plus.google.com/+Bj%C3%B6rnHurling/posts&#34;&gt;Björn Hurling&lt;/a&gt; a publié sur github
&lt;a href=&#34;https://github.com/Triple-T/gradle-play-publisher&#34;&gt;un plugin gradle qui utilise cette API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voyons ensemble pas à pas comment et quoi configurer afin de livrer ses apk en ligne de commande en utilisant gradle.&lt;/p&gt;

&lt;h2 id=&#34;prérequis:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Prérequis&lt;/h2&gt;

&lt;p&gt;Pour commencer, il faut avoir un build qui fonctionne avec gradle.&lt;/p&gt;

&lt;p&gt;Normalement pas de problème si c&amp;rsquo;est un projet récent puisque c&amp;rsquo;est ce qu&amp;rsquo;Android Studio propose maintenant par défaut.
Si ce n&amp;rsquo;est pas le cas, vous pouvez vous reposer sur la &lt;a href=&#34;http://tools.android.com/tech-docs/new-build-system/intellij_to_gradle&#34;&gt;doc de Google&lt;/a&gt; à ce sujet.&lt;/p&gt;

&lt;h2 id=&#34;étape-1-création-du-service-account:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 1 : Création du &amp;lsquo;Service Account&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;La première étape consiste à créer un compte qui peut utilser l&amp;rsquo;API de Google : contrairement à un compte utilisateur classique, celui-ci utilisera un ficher de clé pour s&amp;rsquo;identifier plutôt qu&amp;rsquo;un mot de passe.&lt;/p&gt;

&lt;p&gt;Pour cela, rendez-vous dans un premier temps dans l&amp;rsquo;interface développeur du Play Store, dans la section &lt;code&gt;Settings &amp;gt; API acces&lt;/code&gt; et cliquez sur &lt;code&gt;Create Service Account&lt;/code&gt;.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen1.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 1&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen1.png&#34; alt=&#34;Configuration de l&#39;Accout service - 1&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen2.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 2&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen2.png&#34; alt=&#34;Configuration de l&#39;Accout service - 2&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;En suivant le lien du petit &lt;code&gt;1&lt;/code&gt; vous allez être redirigé vers la console Google développeur d&amp;rsquo;où vous pourrez créer un nouveau &lt;code&gt;Credential&lt;/code&gt;  de type &lt;code&gt;Service account&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sélectionnez le format de clé &lt;code&gt;JSON&lt;/code&gt; qui est recommandé, le téléchargement de celle-ci devrait alors se faire automatiquement.&lt;/p&gt;

&lt;p&gt;On peut ensuite voir qu&amp;rsquo;un nouveau &lt;code&gt;Service account&lt;/code&gt; est apparu dans la liste des Credentials.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen3.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 3&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen3.png&#34; alt=&#34;Configuration de l&#39;Accout service - 3&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen4.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 4&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen4.png&#34; alt=&#34;Configuration de l&#39;Accout service - 4&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen5.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 5&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen5.png&#34; alt=&#34;Configuration de l&#39;Accout service - 5&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;De retour sur l&amp;rsquo;interface d&amp;rsquo;admin du Play Store, on constate que le &lt;code&gt;Service Account&lt;/code&gt; est bien créé et disponible ici.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen6.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 6&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen6.png&#34; alt=&#34;Configuration de l&#39;Accout service - 6&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;étape-2-attribution-des-droits:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 2 : Attribution des droits&lt;/h2&gt;

&lt;p&gt;Il faut maintenant donner les droits au compte que l&amp;rsquo;on vient de créer afin qu&amp;rsquo;il puisse au moins livrer les apk en alpha.&lt;/p&gt;

&lt;p&gt;Pour cela cliquez sur le bouton &lt;code&gt;Grant access&lt;/code&gt;. Dans la popup qui s&amp;rsquo;ouvre, les droits minimums à accorder pour que le plugin puisse fonctionnner sont :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit store listing, pricing &amp;amp; distribution&lt;/li&gt;
&lt;li&gt;Manage Production APKs&lt;/li&gt;
&lt;li&gt;Manage Alpha &amp;amp; Beta APKs&lt;/li&gt;
&lt;li&gt;Manage Alpha &amp;amp; Beta users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ces choix pourront être modifés ultérieurement dans l&amp;rsquo;écran récapitulatif (mais ce n&amp;rsquo;est pas recommandé).&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen7.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 7&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen7.png&#34; alt=&#34;Configuration de l&#39;Accout service - 7&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen8.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 8&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen8.png&#34; alt=&#34;Configuration de l&#39;Accout service - 8&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;étape-3-le-plugin-gradle:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 3 : le plugin gradle&lt;/h2&gt;

&lt;p&gt;Il faut maintenant configurer son build pour ajouter les informations relatives au plugin qui effectuera la livraison vers le Play Store.&lt;/p&gt;

&lt;p&gt;Dans le fichier &lt;code&gt;build.gradle&lt;/code&gt; du projet il faut donc rajouter la dépendance au plugin :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        // ...
        classpath &#39;com.github.triplet.gradle:play-publisher:1.1.4&#39;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et dans le &lt;code&gt;build.gradle&lt;/code&gt; de l&amp;rsquo;application (du Module), il faut appliquer le plugin au même niveau que le plugin Android :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.android.application&#39;
apply plugin: &#39;com.github.triplet.play&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ensuite, toujours dans le &lt;code&gt;build.gradle&lt;/code&gt;, il est nécessaire d&amp;rsquo;ajouter les informations de l&amp;rsquo;&lt;code&gt;Account service&lt;/code&gt; précédemment créé pour qu&amp;rsquo;il puisse se connecter et faire la livraison
(c&amp;rsquo;est là que l&amp;rsquo;on va utiliser la clé &lt;code&gt;JSON&lt;/code&gt; générée).&lt;/p&gt;

&lt;p&gt;Placez donc la clé dans votre projet et faites-y référence dans la configuration du plugin :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;play {
    jsonFile = file(&#39;../publishKey/serviceAccountKeys.json&#39;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;À partir de là, notre build est configuré. On peut notamment s&amp;rsquo;en rendre compte en faisant un &lt;code&gt;./gradlew tasks&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On y voit toutes les tâches gradle qu&amp;rsquo;on peut appeler :&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_before.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles sans le plugin&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_before.png&#34; alt=&#34;Liste des tasks gradle disponibles sans le plugin&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_after.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles avec le plugin&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_after.png&#34; alt=&#34;Liste des tasks gradle disponibles avec le plugin&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Mais ce n&amp;rsquo;est pas suffisant car il manque notamment les tâches permettant l&amp;rsquo;upload de l&amp;rsquo;apk. Pour cela il faut rajouter la &lt;code&gt;signingConfigs&lt;/code&gt; dans le &lt;code&gt;build.gradle&lt;/code&gt;.
Ce qui peut notamment se faire comme ça :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    signingConfigs {
        release {
            storeFile file(&amp;quot;../keystore.jks&amp;quot;)
            storePassword &amp;quot;7r00p3r5&amp;quot;
            keyAlias &amp;quot;release&amp;quot;
            keyPassword &amp;quot;7r00p3r5&amp;quot;
        }
    }
    buildTypes {
        release {
            //...
            signingConfig signingConfigs.release
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maintenant, on peut voir la présence de la tâche qui nous intéresse : &lt;code&gt;publishApkRelease&lt;/code&gt;&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_complete.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles avec upload apk&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_complete.png&#34; alt=&#34;Liste des tasks gradle disponibles avec upload apk&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;        

&lt;h2 id=&#34;étape-4-génération-et-upload:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 4 : génération et upload&lt;/h2&gt;

&lt;p&gt;Pour effectuer un upload de l&amp;rsquo;apk il suffit maintenant d&amp;rsquo;appeler la tâche &lt;code&gt;publishApkRelease&lt;/code&gt;. Et pas besoin de générer l&amp;rsquo;apk signé via Android Studio puisque comme tout est configuré, il sera généré dans les tâches précédent l&amp;rsquo;uploadApk.&lt;/p&gt;

&lt;p&gt;Si tout se passe bien le build se termine avec un :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;BUILD SUCCESSFUL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si il y a un problème lors de l&amp;rsquo;updload, il est affiché dans la console, par exemple si le &lt;strong&gt;version code&lt;/strong&gt; est déjà utilisé&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_upload_ko.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Exemple d&#39;upload d&#39;apk en erreur&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_upload_ko.png&#34; alt=&#34;Exemple d&#39;upload d&#39;apk en erreur&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;    

&lt;p&gt;Ensuite vous pouvez vous rendre sur l&amp;rsquo;interface d&amp;rsquo;admin du Play Store et constater que l&amp;rsquo;upload d&amp;rsquo;un nouvel apk a bien eu lieu en alpha et le passer en bêta ou en production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt; : ne pas commiter la clé &lt;code&gt;JSON&lt;/code&gt; sur github, au même titre que le mot de passe du &lt;code&gt;keystore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;##Pour aller plus loin&lt;/p&gt;

&lt;p&gt;Le plugin permet bien plus de choses que la livraison des apks. En effet, il permet de mettre à jour la description, les images et le changelog.
Pour savoir comment configurer tout cela, je vous invite à consulter la page github du projet &lt;a href=&#34;https://github.com/Triple-T/gradle-play-publisher&#34;&gt;https://github.com/Triple-T/gradle-play-publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;étape ultime de la livraison continue, c’est de configurer un jenkins pour qu’il livre en alpha à chaque nouveau commit sur master, et pour cela il suffit de le configurer en rajoutant par exemple une tâche post build qui fera appel à la commande gradle que nous venons de configurer.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>