<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Play2 on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>http://test.code-troopers.com/tags/play2/</link>
    <description>Recent content in Play2 on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 05 May 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://test.code-troopers.com/tags/play2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Play2 accéder à la base de donnée</title>
      <link>http://test.code-troopers.com/2014/05/05/playdbbrowser</link>
      <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/05/05/playdbbrowser</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.playframework.com/&#34;&gt;Play2&lt;/a&gt;, c&amp;rsquo;est fun et c&amp;rsquo;est rapide !
Il suffit de quelques instants pour avoir une appli qui tourne en local sans rien avoir à configurer &lt;a href=&#34;http://www.playframework.com/documentation/2.2.x/NewApplication&#34;&gt;voir la doc de play&lt;/a&gt;.
En plus dès que l&amp;rsquo;on commence un peu à jouer, créer des entités, faire une page de CRUD, tout tourne toujours aussi bien. Il faut dire que c&amp;rsquo;est agréable, car &lt;a href=&#34;http://www.playframework.com/documentation/2.2.x/JavaEbean&#34;&gt;Ebean&lt;/a&gt; s&amp;rsquo;est occupé de générer les commandes sql dans le fichier &lt;em&gt;1.sql&lt;/em&gt; qui est joué automatiquement par play.&lt;/p&gt;

&lt;p&gt;Le problème arrive en général un peu après, lorsque l&amp;rsquo;envie nous prend de visualiser les données qu&amp;rsquo;on a insérées via les pages pour différents traitements.
En effet, pas besoin de monter un serveur sql ou autre, par défaut tout se passe dans une base en mémoire (ce qui signifie aussi, que lorsque le serveur est arrêté les datas disparaissent).
Et forcément la question universelle est &amp;ldquo;Mais comment je peux voir ces ***** de data en base ?&amp;ldquo;.&lt;/p&gt;

&lt;p&gt;La solution est simple, elle réside dans une commande &lt;code&gt;h2-browser&lt;/code&gt;.
Mais pour pouvoir l&amp;rsquo;utiliser, il va falloir se discipliner un tout petit peu. En effet, si vous aviez l&amp;rsquo;habitude de faire des &lt;code&gt;play run&lt;/code&gt; pour lancer le serveur et des &lt;code&gt;ctrl-D&lt;/code&gt; pour l&amp;rsquo;arrêter, il va falloir changer de méthode.&lt;/p&gt;

&lt;p&gt;La procédure miracle est donc la suivante :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lancer la console play&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    $ play
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;lancer le visualiseur de bdd (qui ouvre une fenêtre dans votre navigateur web)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    $ h2-browser
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;démarrer votre serveur.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    $ run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lorsqu&amp;rsquo;il se lance h2-browser devrait vous présenter une fenêtre de connexion comme celle-ci :&lt;/p&gt;

&lt;div style=&#34;text-align : center&#34;&gt;
    &lt;a style=&#34;display: inline&#34; href=&#34;http://test.code-troopers.com/images/postPlayDbBrowser/h2-browser.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;Fenêtre de connection h2-browser&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postPlayDbBrowser/h2-browser.png&#34; alt=&#34;Fenêtre de connection h2-browser&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Maitenant qu&amp;rsquo;il est lancé, il faut se connecter, et par défaut c&amp;rsquo;est pas gagné, parce qu&amp;rsquo;il est configuré pour aller dans la base &amp;lsquo;test&amp;rsquo; qui est une base valide, mais surement pas celle où vos données sont.&lt;/p&gt;

&lt;p&gt;Il faut donc modifier les champs &lt;em&gt;jdbc&lt;/em&gt;, &lt;em&gt;login&lt;/em&gt;, &lt;em&gt;password&lt;/em&gt;.
Pour cela allez chercher dans &lt;strong&gt;application.conf&lt;/strong&gt; (normalement situé dans le répertoire &lt;em&gt;/conf/&lt;/em&gt; de votre projet) et trouvez les champs suivants&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.default.url=&amp;quot;jdbc:h2:mem:play&amp;quot;
db.default.user=sa
db.default.password=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ce sont les 3 valeurs à recopier dans la fenêtre de connexion.&lt;/p&gt;

&lt;p&gt;Et voilà le tour est joué, c&amp;rsquo;est tout de même sympa d&amp;rsquo;être sûr de ce que l&amp;rsquo;on a en base.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NB&lt;/em&gt; : Il faut absolument faire le &lt;code&gt;run&lt;/code&gt; avant de se connecter à la base de donnée, sinon celle-ci sera lockée lors de la connexion par h2-broswer et l&amp;rsquo;application play ne pourra pas s&amp;rsquo;y connecter.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sous le capot du Startup Weekend Tours</title>
      <link>http://test.code-troopers.com/2014/04/03/souslecapot-startupweekendtours</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/04/03/souslecapot-startupweekendtours</guid>
      <description>

&lt;p&gt;Après l’article global d’impressions sur le Startup Weekend, nous sommes obligés de faire un court article précisant ce que nous avons implémenté et utilisé du point de vue technique (c’est ce qui nous intéresse beaucoup après tout).&lt;/p&gt;

&lt;h2 id=&#34;contenu-fonctionnel:129c811b9c3437423eca6c111ce12fee&#34;&gt;Contenu fonctionnel :&lt;/h2&gt;

&lt;p&gt;Puisque nous avons pris le temps de faire une application entière en 54h, nous allons tout de même détailler les fonctionnalités qui existent dans ce que nous avons produit :
* création de compte classique (avec validation par email obligatoire)
* création de compte via connexion Facebook
* proposition d’ajout de spectacle
* vote sur un spectacle existant
* duplication de spectacle (changement de ville)
* partage Twitter / Facebook / Google plus
* envoi de mail selon les statuts des événements
* &lt;em&gt;backoffice&lt;/em&gt; avec un tableau des événements et la possibilité de modifier leurs statuts
* modération des propositions de spectacle (avec remplissage automatique de la biographie / photo d’un artiste à partir de l’API &lt;a href=&#34;http://developer.echonest.com/&#34;&gt;EchoNest&lt;/a&gt;)
* recherche globale avec Elasticsearch (géolocalisation et &lt;em&gt;full-text&lt;/em&gt; sur artiste)&lt;/p&gt;

&lt;h2 id=&#34;contenu-technique:129c811b9c3437423eca6c111ce12fee&#34;&gt;Contenu technique :&lt;/h2&gt;

&lt;p&gt;Les technologies utilisées dans le projet sont :
* &lt;a href=&#34;http://playframework.org&#34;&gt;PlayFramework!&lt;/a&gt;
  * socle &lt;a href=&#34;https://github.com/joscha/play-authenticate&#34;&gt;Play authenticate&lt;/a&gt;
  * intégration &lt;a href=&#34;http://code-troopers.com/2014/03/05/passwordStrength.html&#34;&gt;password-strength&lt;/a&gt;
  * intégration &lt;a href=&#34;https://github.com/CedricGatay/play2-elasticsearch-jest&#34;&gt;elasticsearch-jest&lt;/a&gt;
  * intégration &lt;a href=&#34;https://github.com/CedricGatay/play-liquibase&#34;&gt;liquibase&lt;/a&gt;
* &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Twitter Bootstrap&lt;/a&gt;
* &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt;
* &lt;a href=&#34;http://jquery.com&#34;&gt;JQuery&lt;/a&gt;
  * &lt;a href=&#34;http://ivaynberg.github.io/select2/&#34;&gt;select2&lt;/a&gt;
  * &lt;a href=&#34;https://github.com/stchangg/placecomplete&#34;&gt;select2-placecomplete&lt;/a&gt;
  * &lt;a href=&#34;https://github.com/seiyria/bootstrap-slider&#34;&gt;bootstrap-slider&lt;/a&gt;
  * &lt;a href=&#34;https://github.com/dangrossman/bootstrap-daterangepicker&#34;&gt;bootstrap-daterangepicker&lt;/a&gt;
* &lt;a href=&#34;http://parsleyjs.org&#34;&gt;ParsleyJS&lt;/a&gt;
* &lt;a href=&#34;http://elasticsearch.org&#34;&gt;ElasticSearch&lt;/a&gt;
* &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;
* &lt;a href=&#34;http://gitlab.com&#34;&gt;Gitlab&lt;/a&gt;
* &lt;a href=&#34;http://heroku.com&#34;&gt;Heroku&lt;/a&gt;
* &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dans la liste des librairies utilisées, certaines sont des développements internes qui vont certainement donner lieu bientôt à quelques articles pour les détailler plus précisément.
Pour rappel, le projet est consutable ici : &lt;a href=&#34;http://mybandmycity.code-troopers.com&#34;&gt;My band, My City&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Startup Weekend Tours</title>
      <link>http://test.code-troopers.com/2014/03/23/startupweekend</link>
      <pubDate>Sun, 23 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/03/23/startupweekend</guid>
      <description>

&lt;p&gt;Retour sur 54h de Startup Weekend pour la première édition à Tours &lt;a href=&#34;http://tours.startupweekend.org/&#34;&gt;#swtours&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction:643036b529c62208923412fa6a9f4db8&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Les Startup Weekends ont pour but d’encourager les entrepreneurs à créer leur projet en les confortant dans la viabilité de leur idée et en leur permettant de rencontrer des co-fondateurs. C’est par exemple l’occasion pour un charpentier de rencontrer des informaticiens pour réaliser un site, de rencontrer des avocats pour être sûr de la légalité et des investisseurs pour étudier la viabilité de la startup. Le tout en 54h, il faut aller vite !&lt;/p&gt;

&lt;h2 id=&#34;vendredi-be-my-tourneur:643036b529c62208923412fa6a9f4db8&#34;&gt;Vendredi (Be My Tourneur):&lt;/h2&gt;

&lt;p&gt;Nous avions prévu l’événement en sortant de notre backlog idées quelques sujets qui pouvaient mériter d’être présentés lors de l’événement. Nous avons finalement présenté un sujet (que nous risquons de développer en interne dans quelque temps) concernant la prise de rendez-vous auprès des artisans.&lt;/p&gt;

&lt;p&gt;La sélection des projets se fait par l’intégralité des personnes présentes, en effet, chaque participant à l’événement avait à sa disposition trois pastilles autocollantes à coller sur les différents sujets.&lt;/p&gt;

&lt;p&gt;À l’issue de ce vote, les projets ayant recueillis le plus de voix ont été conservés et leurs initiateurs ont eu l’occasion de les détailler un peu plus pour pouvoir effectuer le recrutement pour mener à bien leur idée.&lt;/p&gt;

&lt;p&gt;En plus des projets sélectionnés par le nombre de votes, n’importe quel projet qui arrivait à réunir une équipe d’au moins deux personnes avait le droit de lancer son idée (ce qui fut le cas de deux équipes).&lt;/p&gt;

&lt;p&gt;Comme vous l’avez sûrement remarqué, l’équipe Code-Troopers est composée de développeurs qui aiment la musique, un des projets présenté consistait à donner au public l’opportunité de proposer la venue d’artistes dans une ville en particulier. C’est donc tout naturellement que nous nous sommes dirigés vers celui-ci (non sans avoir hésité avec quelques autres projets, dont celui qui a fini vainqueur, et qui le mérite amplement !)&lt;/p&gt;

&lt;p&gt;Ainsi, nous nous sommes retrouvés à 8 dans l’équipe, un membre Business (responsable d’une entreprise de développement locale), trois étudiants de FBS Tours (Business également donc), un graphiste (partagé entre plusieurs projets) et les quatre Code-Troopers inscrits. Nous avons passé le reste de la soirée à brainstormer autour du sujet et voir où nous pouvions raisonnablement aller.&lt;/p&gt;

&lt;p&gt;Nous sommes passés par beaucoup d’étapes et d’idées avortées avant de nous fixer sur le fonctionnement que nous avons développé pendant les deux journées qui ont suivi. Nous avons couché les principaux axes sur le papier et sommes rentrés nous coucher avant d’attaquer les choses sérieuses.&lt;/p&gt;

&lt;p&gt;Fin de journée - 2h&lt;/p&gt;

&lt;h2 id=&#34;samedi-ma-ville-mon-artiste:643036b529c62208923412fa6a9f4db8&#34;&gt;Samedi (Ma Ville Mon Artiste)&lt;/h2&gt;

&lt;p&gt;Pour réaliser ce site rapidement, nous avons utilisé nos outils de prédilection du moment, &lt;a href=&#34;http://www.jetbrains.com/idea/&#34;&gt;Intellij IDEA&lt;/a&gt; comme IDE pour coder avec &lt;a href=&#34;http://playframework.com&#34;&gt;Play framework!&lt;/a&gt;, le partage de sources se faisant sur un dépôt git hébergé par &lt;a href=&#34;https://gitlab.com&#34;&gt;GitLab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Les EPICS en tête, nous nous sommes répartis les tâches pour construire le socle, les entités, les pages et les services dont nous aurions besoin. Pendant ce temps, nos collègues de la partie business s’occupaient du business plan et de l’étude de marché. La demande était forte auprès des personnes sondées mais nous n’étions pas sereins sur le financement, à savoir qui paierait et pour quels services.&lt;/p&gt;

&lt;p&gt;Nous devions nous réunir vers 16h pour savoir vers quoi le développement devait s’orienter. Par exemple nous avions envisagé une partie pour que les petits groupes puissent organiser leur tournée ou pour que les clients fassent du crowdfunding pour faire venir un groupe. L’idée n’était pas arrêtée et les besoins étaient presque opposés, en un week-end nous n’aurions pas le temps de tout faire !&lt;/p&gt;

&lt;p&gt;Les discussions allant entre les mentors et la partie business, ce n’est que vers 20h que nous avons eu le projet final, nous avons alors pu arrêter de nous disperser sur les fonctionnalités potentielles et nous concentrer sur le strict nécessaire pour avoir un projet fini à la fin du week-end.&lt;/p&gt;

&lt;p&gt;Vers minuit, les fonctionnalités étaient toutes présentes, c’était même livré en prod (sur Heroku, avec un lien vers un serveur dédié nous appartenant pour la partie ElasticSearch) ! Par contre c’était un peu… “blanc”.&lt;/p&gt;

&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a style=&#34;display: inline&#34; href=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_1.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;mbmc sans style&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_1.png&#34; alt=&#34;mbmc sans style&#34;/&gt;
&lt;/a&gt;
&lt;a style=&#34;display: inline&#34; href=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_2.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;mbmc sans style&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_2.png&#34; alt=&#34;mbmc sans style&#34;/&gt;
&lt;/a&gt;
&lt;a style=&#34;display: inline&#34; href=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_3.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;mbmc sans style&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postSWTours/mbmc_nostyle_3.png&#34; alt=&#34;mbmc sans style&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;C’est à ce moment là que Vincent le graphiste (&lt;a href=&#34;http://www.faceinteract.com/vnctplsn/&#34;&gt;faceinteract&lt;/a&gt;) est arrivé pour nous offrir un logo et une palette de couleur qui ont pu être intégrés dans la maquette de la page principale faite par Benjamin.&lt;/p&gt;

&lt;p&gt;Fin de journée - 3h&lt;/p&gt;

&lt;h2 id=&#34;dimanche-my-band-my-city:643036b529c62208923412fa6a9f4db8&#34;&gt;Dimanche (My Band My City)&lt;/h2&gt;

&lt;p&gt;Dimanche matin, réveil difficile, il reste encore beaucoup à faire pour rendre le produit sympa visuellement, mais fonctionnellement nous avons quelque chose qui tient la route. En partant du travail fourni par Vincent et Benjamin, il ne nous restait plus qu’à traduire les maquettes dans leurs versions dynamiques.&lt;/p&gt;

&lt;p&gt;Le processus s’est plutôt bien passé, quelques bugs ont été introduits lors de l’opération, mais ceux-ci provenaient plus de changement dans les flux utilisateurs que d’erreurs de conception.&lt;/p&gt;

&lt;p&gt;Pendant que nos amis du business rodaient leur présentation, nous avons eu l’idée de réaliser un screencast simple de l’utilisation de l’application pour éviter les effets pervers d’une démo en live (nous connaissons tous le &lt;a href=&#34;http://fr.wikipedia.org/wiki/J%C3%A9r%C3%B4me_Bonaldi#Effet_Bonaldi&#34;&gt;syndrome Bonaldi&lt;/a&gt;, et le réseau étant particulièrement capricieux, la &lt;a href=&#34;http://fr.wikipedia.org/wiki/Loi_de_Murphy&#34;&gt;loi de Murphy&lt;/a&gt; se serait abattue sur nous !). Vous pouvez consulter le screencast sur YouTube (&lt;a href=&#34;https://www.youtube.com/watch?v=hX9eeCdNIbo&#34;&gt;https://www.youtube.com/watch?v=hX9eeCdNIbo&lt;/a&gt;).&lt;/p&gt;

&lt;div style=&#34;text-align: center&#34;&gt;&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;//www.youtube.com/embed/hX9eeCdNIbo&#34; frameborder=&#34;0&#34;&gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;L&amp;rsquo;application est maintenant publique &lt;a href=&#34;http://mybandmycity.code-troopers.com&#34;&gt;http://mybandmycity.code-troopers.com&lt;/a&gt; (attention ce n&amp;rsquo;est qu&amp;rsquo;une version alpha)!&lt;/p&gt;

&lt;p&gt;Fin de marathon - 17h&lt;/p&gt;

&lt;h2 id=&#34;verdict-final:643036b529c62208923412fa6a9f4db8&#34;&gt;Verdict final&lt;/h2&gt;

&lt;p&gt;Nous avons réussi à finir dans le top 3 ! La notation se fait autour de trois critères : le modèle économique, la validation client et l’exécution. Ce n’était pas gagné car l’idée du projet a été trouvée dans la journée de vendredi, rien n’avait été préparé avant le début du week-end ! C’est d’ailleurs aussi pour ça que le projet s’est tantôt appelé «be my tourneur», puis «ma ville mon artiste», pour finir sur «My Band My City». Le projet a tout de même séduit le jury qui nous a accordé une excellente 3ème place !&lt;/p&gt;

&lt;p&gt;Merci à toute l’équipe du staff qui nous a très bien nourris pendant ce week-end et merci à nos collègues de FBS qui ont eux aussi fait du très bon boulot.&lt;/p&gt;

&lt;h2 id=&#34;classement-final:643036b529c62208923412fa6a9f4db8&#34;&gt;Classement Final&lt;/h2&gt;

&lt;p&gt;10 projets ont été présentés.&lt;/p&gt;

&lt;p&gt;Les 3 premiers:
* Pirate de loire : sur le principe du geo caching, touristique / économique.
* Stud app : application simplifiant la vie des étudiants dans le flux d&amp;rsquo;informations envoyé par les écoles et universités.
* &lt;a href=&#34;http://mybandmycity.code-troopers.com&#34;&gt;My band, My City&lt;/a&gt; : application permettant de développer une communauté pour faire venir un artiste dans sa ville.&lt;/p&gt;

&lt;h2 id=&#34;remerciements:643036b529c62208923412fa6a9f4db8&#34;&gt;Remerciements&lt;/h2&gt;

&lt;p&gt;Ce weekend n’aurait pas pu avoir lieu sans l’investissement de nombreuses personnes, mais nous tenons dans un premier temps à remercier les 4 organisateurs de cette premiere édition du Tours Startup Weekend : Marie Gassie - Julien Dargaisse - Julien Gomès - Julien Grimal. Ensuite il ne faut pas oublier Adrian Pica, qui a fait le déplacement de Roumanie, pour animer le weekend, et grâce à son expérience de nombreux Startup Weekend, il a su motiver et remotiver tous les participants le long de l’événement.&lt;/p&gt;

&lt;p&gt;Il vient ensuite tous les mentors qui ont apportés leur connaissance du marché, leurs expériences des startups et surtout leurs côtés pragmatiques sur les questions de rentabilité et de viabilité des projets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://test.code-troopers.com/images/postSWTours/team.jpg&#34; data-lightbox=&#34;image-1&#34; title=&#34;L’équipe de MyBandMyCity (de gauche à droite) : François (De Feraudy), Fabian (Petit), Julien (Pagnac), Matthieu (Bollot), Cédric (Gatay), Florian (Chauveau), Benjamin (Cousin)&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postSWTours/team.jpg&#34; alt=&#34;L’équipe de MyBandMyCity&#34;/&gt;
&lt;/a&gt;
L’équipe de MyBandMyCity (de gauche à droite) : François (De Feraudy), Fabian (Petit), Julien (Pagnac), Matthieu (Bollot), Cédric (Gatay), Florian (Chauveau), Benjamin (Cousin)&lt;/p&gt;

&lt;div id=&#34;fb-root&#34; style=&#34;text-align:center&#34;&gt;&lt;/div&gt; &lt;script&gt;(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = &#34;//connect.facebook.net/en_US/all.js#xfbml=1&#34;; fjs.parentNode.insertBefore(js, fjs); }(document, &#39;script&#39;, &#39;facebook-jssdk&#39;));&lt;/script&gt;
&lt;div class=&#34;fb-post&#34; data-href=&#34;https://www.facebook.com/media/set/?set=a.236794193172341.1073741831.123604307824664&amp;amp;type=1&#34; data-width=&#34;466&#34;&gt;&lt;div class=&#34;fb-xfbml-parse-ignore&#34;&gt;&lt;a href=&#34;https://www.facebook.com/media/set/?set=a.236794193172341.1073741831.123604307824664&amp;amp;type=1&#34;&gt;Post&lt;/a&gt; by &lt;a href=&#34;https://www.facebook.com/pages/Code-Troopers/123604307824664&#34;&gt;Code-Troopers&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PS : sad story :
Le seul point négatif du weekend (mis à part le wifi), dimanche soir en rentrant, j’ai retrouvé mon vélo, mais la selle avait disparu. Tours conserve donc son titre de ville la moins sûre pour les vélos&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Strength Password Indicator Pour Play2</title>
      <link>http://test.code-troopers.com/2014/03/05/passwordstrength</link>
      <pubDate>Wed, 05 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/03/05/passwordstrength</guid>
      <description>

&lt;h2 id=&#34;introduction:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Le grand public commence tout doucement à être sensibilisé à l’importance d’avoir un mot de passe &lt;b&gt;sécurisé&lt;/b&gt;, en partie grâce aux reportages TV de plus en plus nombreux sur ce domaine, mais surtout par les différentes fuites
ou vols de bases de données qui arrivent de plus en plus fréquemment.&lt;/p&gt;

&lt;p&gt;Il faut donc profiter de cette sensibiliation et en tant que développeurs, nous avons la possibilité d&amp;rsquo;inciter nos
utilisateurs à utiliser un bon mot de passe. Alors, au travail !&lt;/p&gt;

&lt;p&gt;Quoi de mieux pour faire passer un message simple à un utilisateur qu&amp;rsquo;un peu de couleur (savamment dosée bien sûr).
Nous allons donc parler de feedback visuel. Prenons par exemple une création de compte Google.
Lorsqu&amp;rsquo;on entre le mot de passe, Google nous informe de la qualité de la chaîne saisie via un pop-up contenant une progressbar de couleur, accompagnée d&amp;rsquo;un petit commentaire.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;/images/postPasswordStrength/googleWay.png&amp;quot; data-lightbox=&amp;quot;image-1&amp;quot;
   title=&amp;quot;Indicateur de niveau de sécurité by Google&amp;quot;&amp;gt;
    &amp;lt;img class=&amp;quot;mini&amp;quot; src=&amp;quot;/images/postPasswordStrength/googleWay.png&amp;quot;
         alt=&amp;quot;Indicateur de niveau de sécurité by Google&amp;quot;/&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;À mon goût, c&amp;rsquo;est déjà trop, car c&amp;rsquo;est bien connu, aucun utilisateur ne lit les informations qu&amp;rsquo;on lui donne.
Donc se contenter d&amp;rsquo;une barre de progression qui change de couleur sera très bien pour rapidement améliorer l&amp;rsquo;expérience utilisateur.&lt;/p&gt;

&lt;h2 id=&#34;zxcvbn-la-lib-qui-va-bien:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;zxcvbn : la lib qui va bien&lt;/h2&gt;

&lt;p&gt;Il existe déjà de nombreux algorithmes qui essaient de calculer la complexité d’un mot de passe.
Donc au lieu de tenter d&amp;rsquo;inventer un truc bancal, j’ai décidé d’en utiliser un qui semble plutôt abouti : &lt;a href=&#34;https://github.com/lowe/zxcvbn&#34;&gt;zxcvbn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Derrière ce nom barbare on retrouve dans ce projet plusieurs éléments intéressants.
L’avantage de celui-ci de mon point de vue est qu’en plus de calculer la complexité, il utilise aussi un
dictionnaire des mauvais mots de passe. Ainsi ‘123456’ ou ‘password’ seront directement qualifés de mauvais mots de passe.&lt;/p&gt;

&lt;h2 id=&#34;branchement-dans-play:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;Branchement dans play&lt;/h2&gt;

&lt;p&gt;Le branchement dans play, va consister en l&amp;rsquo;ajout de bases au niveau de l&amp;rsquo;input password que l&amp;rsquo;on veux customiser,
puis l&amp;rsquo;appel de la fonction javascript de zxcvbn qui se charge de calculer le niveau de complexité de la chaîne de caractère qui est saisie par l&amp;rsquo;utilisateur.&lt;/p&gt;

&lt;p&gt;Pour cela, on va dans un premier temps inclure les libs qui vont bien :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;zxcvbn (à récupérer sur &lt;a href=&#34;https://github.com/lowe/zxcvbn&#34;&gt;github&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;jquery et bootstrap pour l&amp;rsquo;affichage du feedback&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/assets/js/zxcvbn-async.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script src=&amp;quot;//code.jquery.com/jquery-2.0.3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ensuite, il faut customiser le champ password en question, pour lui ajouter les quelques attributs qui seront affichés en fonction de la saisie utilisateur&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;col-md-6&amp;quot;&amp;gt;
    @input(
    fakeForm(&amp;quot;password&amp;quot;),
    &#39;_label -&amp;gt; Messages(&amp;quot;Password&amp;quot;),
    &#39;class -&amp;gt; &amp;quot;form-control&amp;quot;) { (id, name, value, args) =&amp;gt;
    &amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;@name&amp;quot; id=&amp;quot;@id&amp;quot; @toHtmlArgs(args)&amp;gt;
    &amp;lt;div class=&amp;quot;progress&amp;quot; style=&amp;quot;height: 5px; margin-bottom: 0px;&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;progress-bar&amp;quot; id=&amp;quot;pwdStrengthProgress&amp;quot; style=&amp;quot;width: 0%;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;span class=&amp;quot;label&amp;quot; id=&amp;quot;pwdStrengthLabel&amp;quot; style=&amp;quot;position: relative;float: right;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
    }
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et pour finir, le script qui, lors de la saisie utilisateur, va faire appel à zxcvbn pour savoir ce qu&amp;rsquo;il faut afficher comme feedback&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script&amp;gt;
    $(document).ready(function () {
        $(&#39;#password&#39;).keyup(function (event) {
            var password = $(&#39;#password&#39;).val();
            var result = zxcvbn(password);
            $(&#39;#entropy&#39;).html(result.entropy);

            // label based on score (0,1=weak; 2=ok; 3 =good; 4=great)
            var $label = $(&#39;#pwdStrengthLabel&#39;);
            if (password.length === 0) {
                $label.hide();
            } else {
                $label.show();
            }
            $label.html(result.entropy &amp;lt; 33 ? &amp;quot;Faible&amp;quot; : result.entropy &amp;lt; 66 ? &amp;quot;Moyen&amp;quot; :
                                                       result.entropy &amp;lt; 80 ? &amp;quot;Bon&amp;quot; : &amp;quot;Excellent&amp;quot;);
            $label.removeClass(&amp;quot;label-danger label-warning label-success&amp;quot;)
                    .addClass(result.entropy &amp;lt; 33 ? &amp;quot;label-danger&amp;quot; :
                              result.entropy &amp;lt; 66 ? &amp;quot;label-warning&amp;quot; : &amp;quot;label-success&amp;quot;);

            // progress bar based on entropy (tops out at 100)
            var $progress = $(&#39;#pwdStrengthProgress&#39;);
            $progress.css(&#39;width&#39;, result.entropy + &#39;%&#39;);
            $progress.removeClass(&amp;quot;progress-bar-danger progress-bar-warning progress-bar-success&amp;quot;)
                    .addClass(result.entropy &amp;lt; 33 ? &amp;quot;progress-bar-danger&amp;quot; :
                              result.entropy &amp;lt; 66 ? &amp;quot;progress-bar-warning&amp;quot; : &amp;quot;progress-bar-success&amp;quot;);
        });
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ce script est largement inspiré de : &lt;a href=&#34;https://github.com/johnbeil/bootstrap3-zxcvbn/blob/master/index.html&#34;&gt;https://github.com/johnbeil/bootstrap3-zxcvbn/blob/master/index.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;résultats:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;Résultats&lt;/h2&gt;

&lt;p&gt;Comme vous pouvez le voir dans le js qui traite le retour de la fonction zxcvbn, il y a 3 niveaux de couleurs qui se déclenchent à différents niveaux, combinés à un simple label&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://test.code-troopers.com/images/postPasswordStrength/weak.png&#34; data-lightbox=&#34;image-1&#34;
   title=&#34;Feedback pour un mauvais mot de passe&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postPasswordStrength/weak.png&#34; alt=&#34;Feedback pour un mauvais mot de passe&#34;/&gt;
&lt;/a&gt;
&lt;a href=&#34;http://test.code-troopers.com/images/postPasswordStrength/fair.png&#34; data-lightbox=&#34;image-1&#34;
   title=&#34;Feedback pour un mot de passe moyen&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postPasswordStrength/fair.png&#34; alt=&#34;Feedback pour un mot de passe moyen&#34;/&gt;
&lt;/a&gt;
&lt;a href=&#34;http://test.code-troopers.com/images/postPasswordStrength/good.png&#34; data-lightbox=&#34;image-1&#34;
   title=&#34;Feedback pour un bon mot de passe&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postPasswordStrength/good.png&#34; alt=&#34;Feedback pour un bon mot de passe&#34;/&gt;
&lt;/a&gt;
&lt;a href=&#34;http://test.code-troopers.com/images/postPasswordStrength/great.png&#34; data-lightbox=&#34;image-1&#34;
   title=&#34;Feedback pour un mot de passe parfait&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;http://test.code-troopers.com/images/postPasswordStrength/great.png&#34; alt=&#34;Feedback pour un mot de passe parfait&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;sources:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;Sources&lt;/h2&gt;

&lt;p&gt;Vous pouvez retrouver les sources correspondants à cet exemple dans un projet play sur github à cette adresse : &lt;a href=&#34;https://github.com/fchauveau/passwordStrengthBar&#34;&gt;https://github.com/fchauveau/passwordStrengthBar&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pour-aller-plus-loin:5e76d6bd0d63e3520a432c1520957f8a&#34;&gt;Pour aller plus loin&lt;/h2&gt;

&lt;p&gt;zxcvbn propose 6 indicateurs (&lt;b&gt;entropy, crack_time, crack_time_display, score, match_sequence, calculation_time&lt;/b&gt;)
lors de son contrôle du mot de passe. Dans mon cas je n&amp;rsquo;ai utilisé que l&amp;rsquo;entropie
pour mes niveaux d&amp;rsquo;indicateurs.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>