<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>http://test.code-troopers.com/tags/tips/</link>
    <description>Recent content in Tips on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://test.code-troopers.com/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Macro Vim : C&#39;est trop génial</title>
      <link>http://test.code-troopers.com/2016/05/11/vim_macro</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2016/05/11/vim_macro</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Comme certains d&amp;#8217;entre vous le savent, j&amp;#8217;aime beaucoup Vim. Il n&amp;#8217;y a pas très longtemps au Tours JUG, je disais que je n&amp;#8217;avais pas de cas d&amp;#8217;utilisation des macro dans Vim dont certains disent que c&amp;#8217;est LA killer feature. Et bien j&amp;#8217;ai trouvé un use case et « c&amp;#8217;est trop génial ! » comme dirait Agnès.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-05-VimMacro/trop_genial.gif&#34; data-lightbox=&#34;0&#34; title=&#34;trop génial&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-05-VimMacro/trop_genial.gif&#34; alt=&#34;trop génial&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_angular2_et_macros_vim&#34;&gt;Angular2 et macros Vim&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les vidéos de Devoxx 2016 sont sorties, dont &lt;a href=&#34;https://www.youtube.com/watch?v=5U4OasGuo0o&#34;&gt;Angular 2 : Préparez vous dès maintenant à la migration (Benoit Lemoine)&lt;/a&gt;. Une des étapes est de passer par les ControllerAs, je ne vais pas refaire la conf ce n&amp;#8217;est pas le but. Bref, je travaille sur un projet qui définit les controllers comme ceci :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$routeProvider.when(&#39;/admin/displayMail&#39;, {templateUrl: &#39;partials/display_mail.html&#39;, controller: &#39;ListMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail/:id&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;});
$routeProvider.when(&#39;/admin/displayUsers&#39;, {templateUrl: &#39;partials/display_users.html&#39;, controller: &#39;DisplayUsersCtrl&#39;});
$routeProvider.when(&#39;/admin/createUser&#39;, {templateUrl: &#39;partials/create_user.html&#39;, controller: &#39;CreateUserCtrl&#39;});
$routeProvider.when(&#39;/admin/updateUser/:login&#39;, {templateUrl: &#39;partials/update_user.html&#39;, controller: &#39;UpdateUserCtrl&#39;});&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Je veux rajouter pour chaque ligne un &lt;code&gt;controllerAs: &#39;monCtrl&#39;&lt;/code&gt; avec comme nom le même que le controller associé mais en commençant par une minuscule, et donc obtenir les lignes ci-dessous. J&amp;#8217;ai extrait 6 controllers mais en réalité il y en a plutôt une cinquantaine (les noms ont été changés si on me demande).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$routeProvider.when(&#39;/admin/displayMail&#39;, {templateUrl: &#39;partials/display_mail.html&#39;, controller: &#39;ListMailCtrl&#39;, controllerAs: &#39;listMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;, controllerAs: &#39;editMailCtrl&#39;});
$routeProvider.when(&#39;/admin/createEditMail/:id&#39;, {templateUrl: &#39;partials/create_mail.html&#39;, controller: &#39;EditMailCtrl&#39;, controllerAs: &#39;editMailCtrl&#39;});
$routeProvider.when(&#39;/admin/displayUsers&#39;, {templateUrl: &#39;partials/display_users.html&#39;, controller: &#39;DisplayUsersCtrl&#39;, controllerAs: &#39;displayUsersCtrl&#39;});
$routeProvider.when(&#39;/admin/createUser&#39;, {templateUrl: &#39;partials/create_user.html&#39;, controller: &#39;CreateUserCtrl&#39;, controllerAs: &#39;createUserCtrl&#39;});
$routeProvider.when(&#39;/admin/updateUser/:login&#39;, {templateUrl: &#39;partials/update_user.html&#39;, controller: &#39;UpdateUserCtrl&#39;, controllerAs: &#39;updateUserCtrl&#39;});&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;qa&lt;/code&gt; : on commence la macro, on enregistre dans a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/controller:&amp;lt;enter&amp;gt;&lt;/code&gt; : on recherche controller:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eeee&lt;/code&gt; : on se déplace de mot en mot pour arriver sur le nom du controller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yi&#39;&lt;/code&gt; : on copie tout ce qui se trouve à l&amp;#8217;intérieur des &#39; (le nom du controller donc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ela&lt;/code&gt; : on se déplace vers la droite et on passe en insertion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;controllerAs: &#39;&#39;&amp;lt;Esc&amp;gt;&lt;/code&gt; : on écrit le texte et on repasse en mode normal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hp&lt;/code&gt; : on passe sur la première &#39; et on copie le texte précédemment copié&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bgur&lt;/code&gt; : on se place au début du mot et on passe la première lettre en minuscule&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;q&lt;/code&gt; : fin de l&amp;#8217;enregistrement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;50@a&lt;/code&gt; : on joue la macro 50 fois&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ce qui donne :
&lt;code&gt;qa/controller:&amp;lt;enter&amp;gt;eeeeyi&amp;#8217;era, controllerAs: &#39;&#39;&amp;lt;Esc&amp;gt;cpbgurq50@a&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Juste en lisant le texte, on a l&amp;#8217;impression que c&amp;#8217;est compliqué, avec les explications j&amp;#8217;espère que ça paraît plus simple, en tout cas ça l&amp;#8217;est avec l&amp;#8217;habitude. Cela paraît long aussi mais au final c&amp;#8217;est rapide à taper, il suffit de voir la vidéo qui est en vitesse réelle :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align: center;margin:50px;&#34;&gt;
&lt;video style=&#34;width: 100%;&#34; controls src=&#34;http://test.code-troopers.com/videos/vim_macro.webm&#34;&gt;&lt;/video&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Installer votre dépot privé Docker</title>
      <link>http://test.code-troopers.com/2015/06/25/installdockerregistry</link>
      <pubDate>Thu, 25 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2015/06/25/installdockerregistry</guid>
      <description>

&lt;p&gt;Petit à petit chez Code-Troopers, nous migrons tous nos développements pour utiliser Docker.
Cela fait quelque temps que nous l&amp;rsquo;utilisons pour des projets &amp;ldquo;public&amp;rdquo;, auquel cas le registry public Docker est largement suffisant (et immédiat à utiliser).&lt;/p&gt;

&lt;p&gt;En revanche, nous commençons à migrer nos applications de production également vers Docker, et nous ne pouvons pas utiliser le mode public du registry public.
Nous nous sommes donc mis à déployer un dépôt privé, authentifié par utilisateur / mot de passe.&lt;/p&gt;

&lt;p&gt;La procédure n&amp;rsquo;est pas très complexe, mais cette opération reste une bonne opportunité d&amp;rsquo;écrire un article à ce sujet (les articles en français n&amp;rsquo;étant pas légion).&lt;/p&gt;

&lt;h2 id=&#34;step-by-step:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Step by step&lt;/h2&gt;

&lt;p&gt;Il faut créer une entrée DNS pour votre service.&lt;/p&gt;

&lt;p&gt;Puis nous allons utiliser l&amp;rsquo;image Docker avec nginx pour l&amp;rsquo;authentification &lt;a href=&#34;https://github.com/MarvAmBass/docker-nginx-registry-proxy&#34;&gt;docker-nginx-registry-proxy&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;informations-d-identification:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Informations d&amp;rsquo;identification&lt;/h2&gt;

&lt;p&gt;Pour les étapes suivantes, placez vous dans le répertoire de votre choix pour stocker les fichiers (dans ce cas nous sommes dans &lt;code&gt;/srv/registry-config&lt;/code&gt;)&lt;/p&gt;

&lt;h3 id=&#34;génération-du-certificat:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Génération du certificat&lt;/h3&gt;

&lt;p&gt;Pensez à bien renseigner le FQDN DNS lors de la demande de Common Name pour le certificat.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 4096
openssl req -new -x509 -days 1826 -key ca.key -out ca.crt
openssl genrsa -out ia.key 4096
openssl req -new -key key.pem -out ia.csr #this is where you need to fill your FQDN
openssl x509 -req -days 730 -in ia.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out cert.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;génération-des-mots-de-passes-basic-auth:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Génération des mots de passes basic auth&lt;/h3&gt;

&lt;p&gt;En utilisant un container docker qui embarque htpasswd vous pourrez générer facilement le fichier nécessaire :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --rm -ti -v $(pwd):/tmp dgageot/htpasswd -c /tmp/docker-registry.htpasswd $MONUSER
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;démarrage-du-registry:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Démarrage du registry&lt;/h2&gt;

&lt;p&gt;Les images seront stockées dans le répertoire &lt;code&gt;/srv/registry&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir /srv/registry
docker run -d --restart=always --name registry -v /srv/docker-registry:/registry -e &amp;quot;SETTINGS_FLAVOR=local&amp;quot; -e &amp;quot;STORAGE_PATH=/registry&amp;quot; registry
docker run -d --restart=always -p 443:443 -v /srv/registry-config:/etc/nginx/external --link registry:registry --name nginx-registry-proxy marvambass/nginx-registry-proxy
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configuration-d-une-machine-cliente:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Configuration d&amp;rsquo;une machine cliente&lt;/h2&gt;

&lt;h3 id=&#34;importer-le-certificat-racine:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Importer le certificat racine&lt;/h3&gt;

&lt;p&gt;Il faut importer le certificat racine dans la liste des certificats reconnus&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -s
mkdir -p /etc/docker/certs.d/$FQDN
cp ca.crt /etc/docker/certs.d/$FQDN/

mkdir -p /usr/local/share/ca-certificates/docker-ct
cp ca.crt /usr/local/share/ca-certificates/docker-ct/
update-ca-certificates-
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pour vérifier que tout fonctionne comme attendu, vous pouvez voir si votre certificat ressort bien dans la commande suivante :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;awk -v cmd=&#39;openssl x509 -noout -subject&#39; &#39; /BEGIN/{close(cmd)};{print | cmd}&#39; &amp;lt; /etc/ssl/certs/ca-certificates.crt | grep $(VOTRE IDENTIFIANT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous serez également certainement amené à redémarrer vos daemon docker (de chacune des machines)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl stop docker
systemctl start docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;identification-sur-le-dépot:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Identification sur le dépot&lt;/h3&gt;

&lt;p&gt;Une fois que toutes ces étapes sont effectuées, normalement votre dépot est prêt à être utilisé.&lt;/p&gt;

&lt;p&gt;Il vous faut cependant en première étape vous identifier à l&amp;rsquo;aide du couple utilisateur / mot de passe créé lors de l&amp;rsquo;installation :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker login https://mondepotdocker.tld
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ceci aura pour effet de créer un fichier &lt;code&gt;~/.dockercfg&lt;/code&gt; vous permettant d&amp;rsquo;accéder aux commandes suivantes sans avoir besoin de retaper vos identifiants.&lt;/p&gt;

&lt;h2 id=&#34;utilisation-du-dépôt:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Utilisation du dépôt&lt;/h2&gt;

&lt;p&gt;Une fois la machine cliente configurée, vous pouvez simplement utiliser le dépot en préfixant les noms de vos images par l&amp;rsquo;URL du dépôt.
Par exemple, pour push/pull l&amp;rsquo;image de monapplication la commande suivante fera l&amp;rsquo;affaire :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker push mondepotdocker.tld/monapplication:v1.0.0
docker pull mondepotdocker.tld/monapplication:v1.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;utilisation-avec-docker-compose:5ccf6384c70e5ed97658dbf0e91e8805&#34;&gt;Utilisation avec docker-compose&lt;/h3&gt;

&lt;p&gt;Si vous utilisez docker-compose, il se peut que vous ayiez des soucis avec le certificat autosigné et/ou avec l&amp;rsquo;authentification.&lt;/p&gt;

&lt;p&gt;Pour contourner la vérification du certificat, vous pouvez simplement lancer &lt;code&gt;docker-compose&lt;/code&gt; avec le flag &lt;code&gt;--allow-insecure-ssl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pour ce qui est de l&amp;rsquo;authentification, une astuce simple pour contourner les problèmes de ce genre est de faire un &lt;code&gt;docker pull&lt;/code&gt; manuellement au préalable (le scripter depuis le fichier compose.yml n&amp;rsquo;est pas trop difficile).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Babun un shell sous Windows</title>
      <link>http://test.code-troopers.com/2014/10/01/babun</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/10/01/babun</guid>
      <description>

&lt;h2 id=&#34;oh-non-mon-client-m-oblige-à-être-sous-windows:4926350cdc3d1b77871a61037e1a1233&#34;&gt;Oh non, mon client m&amp;rsquo;oblige à être sous Windows&lt;/h2&gt;

&lt;p&gt;Malheureusement, il est fréquent que nous soyons forcés de travailler sous un environnement que nous n&amp;rsquo;aimons pas. Les raisons sont souvent diverses mais sont presque toujours inflexibles. Le problème est que lorsqu&amp;rsquo;on est habitué à une ligne de commande puissante, le fait d&amp;rsquo;être sous Windows devient un réel handicap.&lt;/p&gt;

&lt;h2 id=&#34;donnez-moi-un-shell:4926350cdc3d1b77871a61037e1a1233&#34;&gt;Donnez moi un shell !&lt;/h2&gt;

&lt;p&gt;Bien sûr, la plupart d&amp;rsquo;entre vous connaîssent Cygwin, qui permet de résoudre bien des problèmes, mais qui en créé aussi un paquet avant d&amp;rsquo;avoir une installation complète et qui fonctionne comme attendu.&lt;/p&gt;

&lt;p&gt;Heureusement,  &lt;a href=&#34;https://twitter.com/tombujok&#34;&gt;Tom Bujok&lt;/a&gt; s&amp;rsquo;est penché sur le souci et a pris le temps de faire une configuration aux petits oignons d&amp;rsquo;un Cygwin complet, avec &lt;code&gt;zsh&lt;/code&gt; et &lt;code&gt;oh-my-zsh&lt;/code&gt; pour avoir une bonne configuration. De plus, pour faire comme si on était sous un unix, on a même un package manager qui permet d&amp;rsquo;installer les outils nécessaires.&lt;/p&gt;

&lt;h2 id=&#34;installation-et-configuration:4926350cdc3d1b77871a61037e1a1233&#34;&gt;Installation et configuration&lt;/h2&gt;

&lt;p&gt;Il suffit de récupérer le zip sur le site officiel &lt;a href=&#34;http://babun.github.io/&#34;&gt;http://babun.github.io&lt;/a&gt; de le dézipper et de lancer le script &lt;code&gt;install.bat&lt;/code&gt;. Ce qui est bien, c&amp;rsquo;est qu&amp;rsquo;il est possible de lancer le script d&amp;rsquo;installation et donc d&amp;rsquo;utiliser babun sans disposer des droits d&amp;rsquo;administrateur sur sa machine.&lt;/p&gt;

&lt;p&gt;Une fois la &lt;em&gt;longue&lt;/em&gt; installation terminée, vous disposez d&amp;rsquo;un shell bien configuré avec la plupart des outils nécessaires bien configurés.&lt;/p&gt;

&lt;p&gt;Cependant vous voudrez certainement personnaliser votre environnement avec quelques alias. Pour ceci, il suffit de créer un fichier contenant vos alias dans &lt;code&gt;~/.oh-my-zsh/custom/aliases.zsh&lt;/code&gt; (le nom est libre, le fichier doit porter l&amp;rsquo;extension  &lt;code&gt;zsh&lt;/code&gt; pour qu&amp;rsquo;il soit automatiquement chargé). Il ne s&amp;rsquo;agit ni plus ni moins de la configuration permise par oh-my-zsh (vous pouvez vous référer &lt;a href=&#34;http://test.code-troopers.com/2014/09/17/ohmyzsh&#34;&gt;à cet article&lt;/a&gt; pour plus de détails)&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
 &lt;a style=&#34;display: inline&#34; href=&#34;http://test.code-troopers.com/images/postBabun/babun.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;Babun et tmux&#34;&gt;
         &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/postBabun/babun.png&#34; alt=&#34;Babun et tmux&#34;/&gt;
 &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;conseils-pratiques:4926350cdc3d1b77871a61037e1a1233&#34;&gt;Conseils pratiques&lt;/h2&gt;

&lt;p&gt;Depuis quelques temps, nous sommes quelques membres de l&amp;rsquo;équipe à &lt;strong&gt;devoir&lt;/strong&gt; travailler  sous Windows. Nous avons rapidement ajouté &lt;code&gt;tmux&lt;/code&gt; à la liste des outils indispensables (la gestion des terminaux Windows n&amp;rsquo;étant pas optimale) ainsi que &lt;code&gt;irssi&lt;/code&gt; en tant que client IRC.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pact install tmux irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puisque c&amp;rsquo;est ni plus ni moins qu&amp;rsquo;une installation de Cygwin, l&amp;rsquo;accès à vos disque se fera par le montage &lt;code&gt;/cygdrive/c/&lt;/code&gt; pour le disque &lt;code&gt;C:&lt;/code&gt; par exemple. Veuillez noter également que l&amp;rsquo;emplacement de votre &lt;code&gt;home&lt;/code&gt; sera en fait &lt;code&gt;/cygdrive/c/Users/$USER/.babun/cygwin/home/$USER&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Maintenant, vous serez presque aussi productifs sous Windows que sous un système &amp;ldquo;agréable&amp;rdquo; !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Résoudre les conflits de dépendances</title>
      <link>http://test.code-troopers.com/2014/09/01/conflitsdependances</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2014/09/01/conflitsdependances</guid>
      <description>

&lt;p&gt;Lors de nos développements, nous reposons beaucoup sur des projets externes qui nous fournissent énormément de services
utiles. Dans un récent projet, nous avons eu besoin de faire fonctionner Neo4j conjointement à ElasticSearch. Jusqu&amp;rsquo;ici,
aucun soucis n&amp;rsquo;est à déplorer, mais nous avions une exigence particulière : il fallait que l&amp;rsquo;application puisse
démarrer automatiquement un serveur Neo4J ainsi qu&amp;rsquo;un serveur ElasticSearch sur les postes de développements (ainsi que
pour les tests d&amp;rsquo;intégration).&lt;/p&gt;

&lt;h2 id=&#34;problème-existant:38707aefd79a15ebcc9f522673215649&#34;&gt;Problème existant&lt;/h2&gt;

&lt;p&gt;Les deux outils que nous utilisons se basent sur Apache Lucene pour toute la partie indexation et accès aux données.
Mais, et c&amp;rsquo;est là que le problème se situe, ils n&amp;rsquo;utilisent pas les mêmes versions de Lucene.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Extrait du pom d&#39;ElasticSearch --&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.lucene&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;lucene-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;4.9.0&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Extrait du pom de Neo4j --&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.lucene&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;lucene-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.6.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ElasticSearch utilise la version 4.9.0, alors que Neo4J utilise la version 3.6.2. Ainsi, en fonction du bon vouloir du
&lt;code&gt;Classloader&lt;/code&gt; qui sera utilisé par l&amp;rsquo;application, il se peut qu&amp;rsquo;ElasticSearch ou Neo4J refuse de fonctionner. La
difficulté pour comprendre et détecter le problème est qu&amp;rsquo;il se manifeste souvent par un obscur &lt;code&gt;NoClassDefFoundError&lt;/code&gt;
ou &lt;code&gt;NoSuchMethodError&lt;/code&gt; qui n&amp;rsquo;est pas des plus explicites (d&amp;rsquo;autant plus lorsque notre IDE nous montre une version qui
contient ledit symbole non trouvé).&lt;/p&gt;

&lt;h2 id=&#34;solution-de-contournement:38707aefd79a15ebcc9f522673215649&#34;&gt;Solution de contournement&lt;/h2&gt;

&lt;p&gt;Le conflit est assez simple à contourner une fois qu&amp;rsquo;on a compris ce qui se passe. En fait, il y a deux classes portant
le même nom dans les classes chargées, par exemple &lt;code&gt;org.lucene.MaClass&lt;/code&gt;, l&amp;rsquo;une effaçant l&amp;rsquo;autre aux yeux du
&lt;code&gt;ClassLoader&lt;/code&gt;.
Une pratique courante est de renommer (ou relocate) le package de base d&amp;rsquo;une bibliothèque utilisée et de l&amp;rsquo;inclure dans
le fichier de package du projet, le plugin &lt;code&gt;maven-shade&lt;/code&gt; est conçu dans cette optique.
Le choix fait est de renommer la dépendance Lucene dans Neo4J pour notre part, ainsi, nous avons forké le projet et
configuré le plugin &lt;code&gt;shade&lt;/code&gt; pour qu&amp;rsquo;il inclue le contenu de la dépendance d&amp;rsquo;Apache Lucene et qu&amp;rsquo;il fasse le renommage de
&lt;code&gt;org.apache.lucene&lt;/code&gt; en &lt;code&gt;shaded.org.apache.lucene&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;
        &amp;lt;executions&amp;gt;
            &amp;lt;execution&amp;gt;
                &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
                &amp;lt;goals&amp;gt;
                    &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
                &amp;lt;/goals&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;createDependencyReducedPom&amp;gt;true&amp;lt;/createDependencyReducedPom&amp;gt;

                    &amp;lt;artifactSet&amp;gt;
                        &amp;lt;includes&amp;gt;
                            &amp;lt;include&amp;gt;org.apache.lucene:*&amp;lt;/include&amp;gt;
                        &amp;lt;/includes&amp;gt;
                    &amp;lt;/artifactSet&amp;gt;
                    &amp;lt;relocations&amp;gt;
                        &amp;lt;relocation&amp;gt;
                            &amp;lt;pattern&amp;gt;org.apache.lucene&amp;lt;/pattern&amp;gt;
                            &amp;lt;shadedPattern&amp;gt;shaded.org.apache.lucene&amp;lt;/shadedPattern&amp;gt;
                        &amp;lt;/relocation&amp;gt;
                    &amp;lt;/relocations&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
  &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;déploiement-et-nommage:38707aefd79a15ebcc9f522673215649&#34;&gt;Déploiement et nommage&lt;/h2&gt;

&lt;p&gt;Pour ne pas polluer les dépôts, le numéro de version modifié a été postfixé par &lt;code&gt;-shaded&lt;/code&gt;. Le déploiement a été fait sur
un dépôt Maven qui est en fait un simple repository Github.
Le commit correspondant à cette modification &lt;a href=&#34;https://github.com/CedricGatay/neo4j/commit/452f58fca69ffe3b1d0eab6261b8342f8da95889&#34;&gt;est consultable
ici&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>