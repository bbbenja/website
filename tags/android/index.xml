<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>https://blog-7460a.firebaseapp.com/tags/android/</link>
    <description>Recent content in Android on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 30 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog-7460a.firebaseapp.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android : Feature Toggle avec Google Tag Manager</title>
      <link>https://blog-7460a.firebaseapp.com/2016/03/30/android_google_tag_manager_feature_toggle</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2016/03/30/android_google_tag_manager_feature_toggle</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le concept de &lt;code&gt;feature toggle&lt;/code&gt; est bien pratique en tant que développeur si l&amp;#8217;on souhaite faire évoluer sa base de code source à un rythme différent de celui des livraisons et des fonctionnalités.
C&amp;#8217;est souvent le cas lorsqu&amp;#8217;il y a autour du produit une équipe marketing / communication qui s&amp;#8217;occupe d&amp;#8217;annoncer telle ou telle nouvelle fonctionnalité.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le problème avec Android c&amp;#8217;est qu&amp;#8217;il peut être vite problématique d&amp;#8217;utiliser ces features toggle, car une fois l&amp;#8217;application arrivée sur le téléphone des utilisateurs le développeur n&amp;#8217;a plus
la possibilité de changer la valeur des flags autrement qu&amp;#8217;en relivrant l&amp;#8217;application, ce qui peut vite se terminer par du spam d&amp;#8217;updates si les activations/désactivations sont trop fréquentes ou trop rapprochées.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;C&amp;#8217;est là qu&amp;#8217;entre en jeu &lt;code&gt;Google Tag Manager&lt;/code&gt;, cet outil made by Google va nous offrir la possibilité d&amp;#8217;activer/désactiver lesdites fonctionnalités et cela sans avoir à redéployer l&amp;#8217;application sur le store.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_google_tag_manager_la_configuration&#34;&gt;Google Tag Manager : La configuration&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pour commencer, il faut aller dans l&amp;#8217;interface dédiée de &lt;a href=&#34;https://tagmanager.google.com&#34;&gt;Google Tag Manager&lt;/a&gt; afin de générer la configuration nécessaire pour notre application.
C&amp;#8217;est via cette IHM et avec les informations que l&amp;#8217;on va y ajouter que l&amp;#8217;on pourra revenir plus tard et modifier des valeurs qui seront prises en compte dans l&amp;#8217;application Android.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;La mise en place d&amp;#8217;une configuration pour une application Android passe donc par les étapes suivantes :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Créez un nouveau container (ce qui correspond à créer la configuration pour une application).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Donnez-lui le nom que vous voulez et sélectionnez le type &lt;code&gt;Android&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Une fois le container créé un code unique du type &lt;code&gt;GTM-XXXXXX&lt;/code&gt; lui est attribué par Google notez-le, il sera utilisé dans le code de l&amp;#8217;application Android.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensuite dans ce container rendez-vous dans la partie &lt;code&gt;Variables&lt;/code&gt; et créez une nouvelle variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choisissez le type &lt;code&gt;Value Collection&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Définissez sa valeur avec un objet json { &#39;clé&#39; : &#39;valeur&#39; }, la clé sera elle aussi réutilisée dans le code Android et la valeur peut être ce que vous souhaitez (ici un boolean ira très bien).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N&amp;#8217;oubliez d&amp;#8217;activer cette variable en sélectionnant Enable : &lt;code&gt;Always&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sauvegardez la variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vous pouvez dès à présent publier le container, il est prêt à être utilisé.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avant de quitter cet écran une dernière opération utile, téléchargez la première version publiée du container, il sera nécessaire de l&amp;#8217;embarquer dans le code source en tant que configuration initiale.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ces étapes sont résumées dans ces écrans :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation1.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation1_min.png&#34; alt=&#34;Création du container&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation2.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création du container - Nom et type&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation2_min.png&#34; alt=&#34;Création du container - Nom et type&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_gtmIdGenerated.png&#34; data-lightbox=&#34;0&#34; title=&#34;GTM id généré&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_gtmIdGenerated_min.png&#34; alt=&#34;GTM id généré&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_screenVariables.png&#34; data-lightbox=&#34;0&#34; title=&#34;Écran &#39;Variables&#39;&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_screenVariables_min.png&#34; alt=&#34;Écran &#39;Variables&#39;&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_createVariable.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création d&amp;#8217;une nouvelle variable&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_createVariable_min.png&#34; alt=&#34;Création d&amp;#8217;une nouvelle variable&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_publishContainer.png&#34; data-lightbox=&#34;0&#34; title=&#34;Publication du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_publishContainer_min.png&#34; alt=&#34;Publication du container&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_downloadContainer.png&#34; data-lightbox=&#34;0&#34; title=&#34;Téléchargement du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_downloadContainer_min.png&#34; alt=&#34;Téléchargement du container&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;/div&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Normalement arrivé là, vous avez configuré un container avec une variable dans celui-ci. Et vous disposez pour ce container de son &lt;em&gt;code unique&lt;/em&gt; ainsi que d&amp;#8217;un &lt;em&gt;binaire&lt;/em&gt; de son contenu.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_application_android_le_code&#34;&gt;Application Android : Le code&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;La seconde partie du travail consiste à modifier son code applicatif afin de lire la variable précédemment ajoutée dans Google Tag Manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pour commencer, stockez votre code Google Tag Manager (dans une constante ou un ficher xml, peu importe).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&amp;lt;resources&amp;gt;
    &amp;lt;string name=&#34;tag_manager_id&#34;&amp;gt;GTM-N8NXMK&amp;lt;/string&amp;gt;
&amp;lt;/resources&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ensuite copiez le binaire téléchargé (correspondant à la configuration initiale du container) dans le répertoire &lt;em&gt;/res/raw/&lt;/em&gt;, attention vous devrez surement changer le nom du fichier pour enlever les majuscules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ajoutez dans votre &lt;em&gt;build.gradle&lt;/em&gt; une nouvelle dépendance vers les play services (seulement la partie analytics nous intéresse).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;dependencies {
    compile &#39;com.google.android.gms:play-services-analytics:8.4.0&#39;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Maintenant dans une Activity (ou bien dans votre Application), vous avez deux choses à faire, récupérer une instance de TagManager et faire une requête pour lire la configuration actuelle du Container.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final TagManager tagManager = TagManager.getInstance(this);
        PendingResult pending = tagManager.loadContainerPreferFresh(getString(R.string.tag_manager_id), R.raw.gtm_initial_conf);
        pending.setResultCallback(new ResultCallback&amp;lt;ContainerHolder&amp;gt;() {
           @Override
           public void onResult(@NonNull ContainerHolder containerHolder) {
               // If unsuccessful, return
               if (!containerHolder.getStatus().isSuccess()) {
                   // Deal with failure
                   return;
               }
               containerHolder.refresh();

               final boolean feature1Status = containerHolder.getContainer().getBoolean(&#34;feature1&#34;);
               Log.d(&#34;TagManager&#34;, String.valueOf(feature1Status));
           }
        }, 2, TimeUnit.SECONDS);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Et c&amp;#8217;est tout ! Vous pouvez retourner dans l&amp;#8217;interface de Tag Manager, pour modifier la valeur de la variable feature1, publiez la nouvelle version du container et si vous redémarrez l&amp;#8217;application,
 la nouvelle valeur devrait apparaitre.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rapide et efficace, non ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_chargement_des_données_du_container&#34;&gt;Chargement des données du container&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Via l&amp;#8217;instance de TagManager différentes méthodes sont disponibles pour charger le container et les valeurs qu&amp;#8217;il contient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;tagManager.loadContainerDefaultOnly(...); &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;
tagManager.loadContainerPreferFresh(...); &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;
tagManager.loadContainerPreferNonDefault(...); &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;va uniquement regarder les valeurs dans le binaire ajouté dans /res/raw&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vont essayer de prendre les dernières valeurs publiées (ou non) mais sans être garantie à 100% (notamment s&amp;#8217;il ya des problèmes de réseaux)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les différences sont détaillées &lt;a href=&#34;https://developers.google.com/android/reference/com/google/android/gms/tagmanager/TagManager#public-methods&#34;&gt;dans la doc&lt;/a&gt;.
Mais selon toute logique cette qui va nous intéresser sera uniquement &lt;code&gt;loadContainerPreferFresh()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les pour et les contre d&amp;#8217;utiliser Tag Manager pour faire du feature toggle vont forcément dépendre du besoin du développeur.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_pour&#34;&gt;Pour&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le principale avantage et la mise en place sans le développement d&amp;#8217;une API rien que pour ça (si votre application n&amp;#8217;a pas de backend dédié, pas besoin d&amp;#8217;en créer un).&lt;br&gt;
Toute la logique de configuration initiale versus configuration mise à jour est déjà implémentée et tout se gère via l&amp;#8217;appel &lt;code&gt;tagManager.loadContainer()&lt;/code&gt;.&lt;br&gt;
Ça fonctionne tout aussi bien sur iOS.&lt;br&gt;
Un autre point très intéressant (et non abordé ici) est la publication d&amp;#8217;une variable selon des critères (on va pouvoir modifier un toggle, pour par exemple faire du A/B testing en fonction d&amp;#8217;un tas de critères comme la taille de l&amp;#8217;écran ou bien la langue de l&amp;#8217;utilisateur ou même la version de l&amp;#8217;application).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_contre&#34;&gt;Contre&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Si le &lt;code&gt;loadPreferFresh&lt;/code&gt; échoue (problème réseau par exemple) on retombe sur la config par défaut, mais est-ce que ça fonctionnerait mieux avec une solution custom ? par sûr.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_liens&#34;&gt;Liens&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Code sources d&amp;#8217;exemple : &lt;a href=&#34;https://github.com/fchauveau/blog-android-tag-manager&#34; class=&#34;bare&#34;&gt;https://github.com/fchauveau/blog-android-tag-manager&lt;/a&gt;&lt;br&gt;
Documentation Google officielle : &lt;a href=&#34;https://developers.google.com/tag-manager/android/v4/&#34; class=&#34;bare&#34;&gt;https://developers.google.com/tag-manager/android/v4/&lt;/a&gt;&lt;br&gt;
Cours Udacity d&amp;#8217;explication : &lt;a href=&#34;https://www.udacity.com/course/viewer#!/c-ud876-2/l-4027658558/m-4328729937&#34; class=&#34;bare&#34;&gt;https://www.udacity.com/course/viewer#!/c-ud876-2/l-4027658558/m-4328729937&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Android : Publier son apk en ligne de commande</title>
      <link>https://blog-7460a.firebaseapp.com/2015/11/04/android_publier_apk_avec_gradle</link>
      <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/11/04/android_publier_apk_avec_gradle</guid>
      <description>

&lt;p&gt;Lorsque l’on fait du développement Android, on a régulièrement besoin de publier des nouvelles versions de l&amp;rsquo;application sur le Play Store.
Il est assez fastidieux de devoir se connecter à l’interface de Google, de sélectionner le projet et ensuite d’uploader son nouvel apk.&lt;/p&gt;

&lt;p&gt;Heureusement pour nous, Google a prévu le coup avec une API que l’on peut attaquer en ligne de commande.
Et, encore plus sympa, &lt;a href=&#34;https://plus.google.com/+Bj%C3%B6rnHurling/posts&#34;&gt;Björn Hurling&lt;/a&gt; a publié sur github
&lt;a href=&#34;https://github.com/Triple-T/gradle-play-publisher&#34;&gt;un plugin gradle qui utilise cette API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voyons ensemble pas à pas comment et quoi configurer afin de livrer ses apk en ligne de commande en utilisant gradle.&lt;/p&gt;

&lt;h2 id=&#34;prérequis:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Prérequis&lt;/h2&gt;

&lt;p&gt;Pour commencer, il faut avoir un build qui fonctionne avec gradle.&lt;/p&gt;

&lt;p&gt;Normalement pas de problème si c&amp;rsquo;est un projet récent puisque c&amp;rsquo;est ce qu&amp;rsquo;Android Studio propose maintenant par défaut.
Si ce n&amp;rsquo;est pas le cas, vous pouvez vous reposer sur la &lt;a href=&#34;http://tools.android.com/tech-docs/new-build-system/intellij_to_gradle&#34;&gt;doc de Google&lt;/a&gt; à ce sujet.&lt;/p&gt;

&lt;h2 id=&#34;étape-1-création-du-service-account:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 1 : Création du &amp;lsquo;Service Account&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;La première étape consiste à créer un compte qui peut utilser l&amp;rsquo;API de Google : contrairement à un compte utilisateur classique, celui-ci utilisera un ficher de clé pour s&amp;rsquo;identifier plutôt qu&amp;rsquo;un mot de passe.&lt;/p&gt;

&lt;p&gt;Pour cela, rendez-vous dans un premier temps dans l&amp;rsquo;interface développeur du Play Store, dans la section &lt;code&gt;Settings &amp;gt; API acces&lt;/code&gt; et cliquez sur &lt;code&gt;Create Service Account&lt;/code&gt;.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen1.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 1&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen1.png&#34; alt=&#34;Configuration de l&#39;Accout service - 1&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen2.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 2&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen2.png&#34; alt=&#34;Configuration de l&#39;Accout service - 2&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;En suivant le lien du petit &lt;code&gt;1&lt;/code&gt; vous allez être redirigé vers la console Google développeur d&amp;rsquo;où vous pourrez créer un nouveau &lt;code&gt;Credential&lt;/code&gt;  de type &lt;code&gt;Service account&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sélectionnez le format de clé &lt;code&gt;JSON&lt;/code&gt; qui est recommandé, le téléchargement de celle-ci devrait alors se faire automatiquement.&lt;/p&gt;

&lt;p&gt;On peut ensuite voir qu&amp;rsquo;un nouveau &lt;code&gt;Service account&lt;/code&gt; est apparu dans la liste des Credentials.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen3.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 3&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen3.png&#34; alt=&#34;Configuration de l&#39;Accout service - 3&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen4.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 4&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen4.png&#34; alt=&#34;Configuration de l&#39;Accout service - 4&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen5.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 5&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen5.png&#34; alt=&#34;Configuration de l&#39;Accout service - 5&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;De retour sur l&amp;rsquo;interface d&amp;rsquo;admin du Play Store, on constate que le &lt;code&gt;Service Account&lt;/code&gt; est bien créé et disponible ici.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen6.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 6&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen6.png&#34; alt=&#34;Configuration de l&#39;Accout service - 6&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;étape-2-attribution-des-droits:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 2 : Attribution des droits&lt;/h2&gt;

&lt;p&gt;Il faut maintenant donner les droits au compte que l&amp;rsquo;on vient de créer afin qu&amp;rsquo;il puisse au moins livrer les apk en alpha.&lt;/p&gt;

&lt;p&gt;Pour cela cliquez sur le bouton &lt;code&gt;Grant access&lt;/code&gt;. Dans la popup qui s&amp;rsquo;ouvre, les droits minimums à accorder pour que le plugin puisse fonctionnner sont :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit store listing, pricing &amp;amp; distribution&lt;/li&gt;
&lt;li&gt;Manage Production APKs&lt;/li&gt;
&lt;li&gt;Manage Alpha &amp;amp; Beta APKs&lt;/li&gt;
&lt;li&gt;Manage Alpha &amp;amp; Beta users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ces choix pourront être modifés ultérieurement dans l&amp;rsquo;écran récapitulatif (mais ce n&amp;rsquo;est pas recommandé).&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen7.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 7&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen7.png&#34; alt=&#34;Configuration de l&#39;Accout service - 7&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen8.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Configuration de l&#39;Accout service - 8&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_ConfigureAccount_Screen8.png&#34; alt=&#34;Configuration de l&#39;Accout service - 8&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;étape-3-le-plugin-gradle:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 3 : le plugin gradle&lt;/h2&gt;

&lt;p&gt;Il faut maintenant configurer son build pour ajouter les informations relatives au plugin qui effectuera la livraison vers le Play Store.&lt;/p&gt;

&lt;p&gt;Dans le fichier &lt;code&gt;build.gradle&lt;/code&gt; du projet il faut donc rajouter la dépendance au plugin :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        // ...
        classpath &#39;com.github.triplet.gradle:play-publisher:1.1.4&#39;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et dans le &lt;code&gt;build.gradle&lt;/code&gt; de l&amp;rsquo;application (du Module), il faut appliquer le plugin au même niveau que le plugin Android :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apply plugin: &#39;com.android.application&#39;
apply plugin: &#39;com.github.triplet.play&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ensuite, toujours dans le &lt;code&gt;build.gradle&lt;/code&gt;, il est nécessaire d&amp;rsquo;ajouter les informations de l&amp;rsquo;&lt;code&gt;Account service&lt;/code&gt; précédemment créé pour qu&amp;rsquo;il puisse se connecter et faire la livraison
(c&amp;rsquo;est là que l&amp;rsquo;on va utiliser la clé &lt;code&gt;JSON&lt;/code&gt; générée).&lt;/p&gt;

&lt;p&gt;Placez donc la clé dans votre projet et faites-y référence dans la configuration du plugin :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;play {
    jsonFile = file(&#39;../publishKey/serviceAccountKeys.json&#39;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;À partir de là, notre build est configuré. On peut notamment s&amp;rsquo;en rendre compte en faisant un &lt;code&gt;./gradlew tasks&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On y voit toutes les tâches gradle qu&amp;rsquo;on peut appeler :&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_before.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles sans le plugin&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_before.png&#34; alt=&#34;Liste des tasks gradle disponibles sans le plugin&#34;/&gt;
  &lt;/a&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_after.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles avec le plugin&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_after.png&#34; alt=&#34;Liste des tasks gradle disponibles avec le plugin&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Mais ce n&amp;rsquo;est pas suffisant car il manque notamment les tâches permettant l&amp;rsquo;upload de l&amp;rsquo;apk. Pour cela il faut rajouter la &lt;code&gt;signingConfigs&lt;/code&gt; dans le &lt;code&gt;build.gradle&lt;/code&gt;.
Ce qui peut notamment se faire comme ça :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    signingConfigs {
        release {
            storeFile file(&amp;quot;../keystore.jks&amp;quot;)
            storePassword &amp;quot;7r00p3r5&amp;quot;
            keyAlias &amp;quot;release&amp;quot;
            keyPassword &amp;quot;7r00p3r5&amp;quot;
        }
    }
    buildTypes {
        release {
            //...
            signingConfig signingConfigs.release
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maintenant, on peut voir la présence de la tâche qui nous intéresse : &lt;code&gt;publishApkRelease&lt;/code&gt;&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_complete.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Liste des tasks gradle disponibles avec upload apk&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_tasks_config_complete.png&#34; alt=&#34;Liste des tasks gradle disponibles avec upload apk&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;        

&lt;h2 id=&#34;étape-4-génération-et-upload:004518072c85d3d30c7a81ad5c38fa96&#34;&gt;Étape 4 : génération et upload&lt;/h2&gt;

&lt;p&gt;Pour effectuer un upload de l&amp;rsquo;apk il suffit maintenant d&amp;rsquo;appeler la tâche &lt;code&gt;publishApkRelease&lt;/code&gt;. Et pas besoin de générer l&amp;rsquo;apk signé via Android Studio puisque comme tout est configuré, il sera généré dans les tâches précédent l&amp;rsquo;uploadApk.&lt;/p&gt;

&lt;p&gt;Si tout se passe bien le build se termine avec un :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;BUILD SUCCESSFUL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si il y a un problème lors de l&amp;rsquo;updload, il est affiché dans la console, par exemple si le &lt;strong&gt;version code&lt;/strong&gt; est déjà utilisé&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
  &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_upload_ko.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Exemple d&#39;upload d&#39;apk en erreur&#34; class=&#34;inlineBoxes&#34;&gt;
    &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroidGradlePublishApk/Android_Gradle_PublishAPK_Gradlew_upload_ko.png&#34; alt=&#34;Exemple d&#39;upload d&#39;apk en erreur&#34;/&gt;
  &lt;/a&gt;
&lt;/div&gt;    

&lt;p&gt;Ensuite vous pouvez vous rendre sur l&amp;rsquo;interface d&amp;rsquo;admin du Play Store et constater que l&amp;rsquo;upload d&amp;rsquo;un nouvel apk a bien eu lieu en alpha et le passer en bêta ou en production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt; : ne pas commiter la clé &lt;code&gt;JSON&lt;/code&gt; sur github, au même titre que le mot de passe du &lt;code&gt;keystore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;##Pour aller plus loin&lt;/p&gt;

&lt;p&gt;Le plugin permet bien plus de choses que la livraison des apks. En effet, il permet de mettre à jour la description, les images et le changelog.
Pour savoir comment configurer tout cela, je vous invite à consulter la page github du projet &lt;a href=&#34;https://github.com/Triple-T/gradle-play-publisher&#34;&gt;https://github.com/Triple-T/gradle-play-publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;étape ultime de la livraison continue, c’est de configurer un jenkins pour qu’il livre en alpha à chaque nouveau commit sur master, et pour cela il suffit de le configurer en rajoutant par exemple une tâche post build qui fera appel à la commande gradle que nous venons de configurer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android M - Nouvelle gestion de permission</title>
      <link>https://blog-7460a.firebaseapp.com/2015/09/22/android_m_permissions</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/09/22/android_m_permissions</guid>
      <description>

&lt;h1 id=&#34;nouvelle-approche:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Nouvelle approche&lt;/h1&gt;

&lt;p&gt;Avec la prochaine release d&amp;rsquo;&lt;code&gt;Android 6.0 Marshmallow&lt;/code&gt;, il va y avoir du changement au niveau de la gestion des permissions.
Terminé la popup qui demande les 10 autorisations au moment du téléchargement de l&amp;rsquo;appli, maintenant les développeurs vont pouvoir demander les permissions au moment où elles seront nécessaires.&lt;/p&gt;

&lt;h3 id=&#34;permissions-irrévocables:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Permissions irrévocables&lt;/h3&gt;

&lt;p&gt;Puisqu&amp;rsquo;il va falloir demander à l&amp;rsquo;utilisateur pour chaque permission, Google a décidé que certaines anciennes permissions n&amp;rsquo;auront plus besoin d&amp;rsquo;être demandées,
 ce sont les &lt;code&gt;Normal Permissions&lt;/code&gt;. Il s&amp;rsquo;agit des permissions qui n&amp;rsquo;engendrent pas de risque sur la vie privée ou sur la sécurité de l&amp;rsquo;utilisateur comme c&amp;rsquo;est par exemple le cas pour l&amp;rsquo;accès à internet ou l&amp;rsquo;accès au vibreur :
 la liste complète est disponible &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html#normal&#34;&gt;ici&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;guidelines:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Guidelines&lt;/h3&gt;

&lt;p&gt;Pour ce qui est de l&amp;rsquo;UX, Google a fait plusieurs recommandations dont certaines sont plus importantes que d&amp;rsquo;autres, à mon avis :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ne demander une permisission qu&amp;rsquo;au moment où l&amp;rsquo;on en a vraiment besoin, ce qui implique de ne pas avoir un popup au lancement qui va demander toutes les permissions ;&lt;/li&gt;
&lt;li&gt;Faire le maximum pour ne pas gâcher l&amp;rsquo;experience utilisateur même s&amp;rsquo;il refuse une permission : donc prévoir un mode dégradé autant que possible ;&lt;/li&gt;
&lt;li&gt;Utiliser les méthodes disponibles dans appcompat plutôt que celles du sdk de base.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mise-en-pratique:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Mise en pratique&lt;/h1&gt;

&lt;p&gt;Avant de commencer à coder, une dernière chose à garder à l&amp;rsquo;esprit c&amp;rsquo;est que l&amp;rsquo;utilisateur peut à tout moment révoquer une permission via le détail de l&amp;rsquo;application (même une fois que l&amp;rsquo;appli est lancée et tourne en background).
 Il faudra donc adapter la gestion de ces permissions à cette éventualité.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p6.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran App Info&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p6.png&#34; alt=&#34;Écran App Info&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p5.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran App Info : détail des permissions&#34;  class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p5.png&#34; alt=&#34;Écran App Info : détail des permissions&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;ne-pas-implémenter-les-nouvelles-permissions:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Ne pas implémenter les nouvelles permissions&lt;/h2&gt;

&lt;p&gt;Chose importante à savoir, vous n&amp;rsquo;êtes pas obligés d&amp;rsquo;implémenter cette nouvelle gestion de permission.
En effet, puisqu&amp;rsquo;elle demande du développoment supplémentaire, de nombreuses applis ne seront pas mises à jour et garderont donc l&amp;rsquo;ancien fonctionnement.
Si c&amp;rsquo;est ce que vous souhaitez, et pour ne pas nuire au bon fonctionnement de votre appli, il vous suffit de ne pas cibler le dernier &lt;code&gt;sdk&lt;/code&gt; dans votre build.gradle et de rester sur le &lt;code&gt;22&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;implémenter-les-nouvelles-permissions:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Implémenter les nouvelles permissions&lt;/h2&gt;

&lt;p&gt;Pour cela, 3 étapes sont nécessaires, principalement disponibles dans le sdk 23 ainsi que dans la lib appcompat :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requestPermissions()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onRequestPermissionsResult()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shouldShowRequestPermissionRationale()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;build-gradle:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Build.gradle&lt;/h3&gt;

&lt;p&gt;Permière étape, cibler la dernier version du &lt;code&gt;sdk&lt;/code&gt; : &lt;code&gt;23&lt;/code&gt;.
Et en bonus, importer appcompat pour bénéficier des méthodes helpers de Google.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;compileSdkVersion 23
defaultConfig {
    targetSdkVersion 23
}
dependencies {
    compile &#39;com.android.support:appcompat-v7:23.0.1&#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;androidmanifest-xml:84bad094dd5fba286487f6a75a705f1d&#34;&gt;AndroidManifest.xml&lt;/h3&gt;

&lt;p&gt;Ensuite, déclarer les permissions désirées dans l&amp;rsquo;application, normalement il n&amp;rsquo;y a pas de changements par rapport à votre configuration actuelle&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.CAMERA&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_CONTACTS&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.SEND_SMS&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_EXTERNAL_STORAGE&amp;quot; /&amp;gt;
&amp;lt;uses-permission android:name=&amp;quot;android.permission.CALL_PHONE&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;N&amp;rsquo;oubliez pas d&amp;rsquo;y déclarer aussi les &lt;code&gt;Normal Permissions&lt;/code&gt; qui, bien qu&amp;rsquo;elles soient automatiquement accordées, ont toujours besoin d&amp;rsquo;être déclarées.&lt;/p&gt;

&lt;h3 id=&#34;dans-une-activité:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Dans une activité&lt;/h3&gt;

&lt;p&gt;Dans un premier temps il faut vérifier si une permission est déjà accordée ou non&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ContextCompat.checkSelfPermission(context, Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si la permission n&amp;rsquo;est pas accordée, il va falloir la demander, de préférence lors d&amp;rsquo;une action utilisateur, par exemple au click sur un bouton&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.CAMERA},
                                  REQUEST_CODE_ONE);
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p1.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande d&#39;une permission&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p1.png&#34; alt=&#34;Dialog de demande d&#39;une permission&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Puis écouter le choix de l&amp;rsquo;utilisateur, dans l&amp;rsquo;activité ou le fragment correspondant&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Override
public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    switch (requestCode) {
        case REQUEST_CODE_ONE: {
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(this, &amp;quot;Permission granted&amp;quot;, Toast.LENGTH_LONG).show();
            } else {
                Toast.makeText(this, &amp;quot;Permission denied&amp;quot;, Toast.LENGTH_LONG).show();
            }
            return;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;demander-plusieurs-permissions-en-même-temps:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Demander plusieurs permissions en même temps&lt;/h3&gt;

&lt;p&gt;Même si cela est déconseillé, il peut arriver d&amp;rsquo;avoir besoin de plusieurs permissions lors de la même action utilisateur.
Pour cela il suffit de passer plusieurs permissions dans le tableau passé en paramètre du requestPermission&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.READ_CONTACTS, Manifest.permission.ACCESS_FINE_LOCATION},
                                  REQUEST_CODE_TWO);
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p2.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande de plusieurs permissions 1/2&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p2.png&#34; alt=&#34;Dialog de demande de plusieurs permissions 1/2&#34;/&gt;
    &lt;/a&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p3.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog de demande de plusieurs permissions 2/2&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p3.png&#34; alt=&#34;Dialog de demande de plusieurs permissions 2/2&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;expliquer-à-l-utilisateur-pourquoi-il-doit-autoriser-une-permission:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Expliquer à l&amp;rsquo;utilisateur pourquoi il doit autoriser une permission&lt;/h3&gt;

&lt;p&gt;Il arrivera sûrement que certains utilsateurs refusent des permissions et que cela détériore l&amp;rsquo;expérience utilisateur sur l&amp;rsquo;application. Pour cela, Google fourni un helper pour savoir ou non s&amp;rsquo;il faut afficher un message d&amp;rsquo;information à l&amp;rsquo;utilisateur (graphique).
Cela se fera avec la méthode shouldShowRequestPermissionRationale&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (shouldShowRequestPermissionRationale(Manifest.permission.CALL_PHONE)) {
     new AlertDialog.Builder(MainActivity.this)
                               .setMessage(&amp;quot;Custom message to explain why you need a permission&amp;quot;)
                               .setPositiveButton(&amp;quot;OK&amp;quot;, new DialogInterface.OnClickListener() {
                                   @Override
                                   public void onClick(DialogInterface dialog, int which) {
                                       ActivityCompat.requestPermissions(MainActivity.this,
                                               new String[]{Manifest.permission.CALL_PHONE},
                                               REQUEST_CODE_FIVE);
                                   }
                               })
                               .setNegativeButton(&amp;quot;Cancel&amp;quot;, null)
                               .create()
                               .show();
}
ActivityCompat.requestPermissions(MainActivity.this,
                                  new String[]{Manifest.permission.CALL_PHONE},
                                  REQUEST_CODE_FIVE);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p4.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Dialog d&#39;explication sur une demande de permissions&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/2015-09-AndroidMPermissions/p4.png&#34; alt=&#34;Dialog d&#39;explication sur une demande de permissions&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;le-piège-à-éviter:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Le piège à éviter&lt;/h3&gt;

&lt;p&gt;Penser à vérifier régulièrement l&amp;rsquo;état des permissions dans le &lt;em&gt;onResume()&lt;/em&gt; de vos Activity ou Fragment, étant donné que l&amp;rsquo;utilsateur peut à tout moment les révoquer cela permettra d&amp;rsquo;éviter de nombreux crashs.&lt;/p&gt;

&lt;h2 id=&#34;resources:84bad094dd5fba286487f6a75a705f1d&#34;&gt;Resources&lt;/h2&gt;

&lt;p&gt;Code source d&amp;rsquo;exemple : &lt;a href=&#34;https://github.com/fchauveau/android-permissions-sample&#34;&gt;https://github.com/fchauveau/android-permissions-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doc développeur Android : &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html&#34;&gt;https://developer.android.com/preview/features/runtime-permissions.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Guidelines Android : &lt;a href=&#34;https://developer.android.com/preview/features/runtime-permissions.html&#34;&gt;http://www.google.fr/design/spec/patterns/permissions.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explication sur quand demander une permission : &lt;a href=&#34;https://www.youtube.com/watch?v=iZqDdvhTZj0&#34;&gt;https://www.youtube.com/watch?v=iZqDdvhTZj0&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Support Design Library</title>
      <link>https://blog-7460a.firebaseapp.com/2015/06/06/androiddesignlibrary</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2015/06/06/androiddesignlibrary</guid>
      <description>&lt;p&gt;Avez-vous déjà essayé de transformer vos applications Android pour les rendre conformes aux &lt;a href=&#34;http://www.google.com/design/spec/material-design/introduction.html&#34;&gt;guidelines Material&lt;/a&gt;, si oui, vous avez dû comme nous, vous retrouver à importer plein de librairies tierces pour implémenter par exemple le &lt;code&gt;FAB button&lt;/code&gt;, ou même personnaliser le code pour rendre le &lt;code&gt;NavigationDrawer&lt;/code&gt; conforme (comme ce qui a pu être fait sur le squelette d&amp;rsquo;un &lt;a href=&#34;http://code-troopers.com/2014/11/26/SqueletteAndroid5.html&#34;&gt;précédent article&lt;/a&gt;. Et bien tout ceci est fini (enfin en partie), grâce à la nouvelle librairie Android de Google &lt;a href=&#34;http://developer.android.com/tools/support-library/features.html#design&#34;&gt;Design Support&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;text-align:center&#34;&gt;
&lt;video width=&#34;270&#34; height=&#34;444&#34; controls&gt;
  &lt;source src=&#34;https://blog-7460a.firebaseapp.com/videos/designlibrary-cheesesquare.mp4&#34; type=&#34;video/mp4&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;

&lt;p&gt;Pour le moment elle permet d&amp;rsquo;implémenter les composants Material suivants :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TextInputLayout&lt;/li&gt;
&lt;li&gt;FloatingActionButton&lt;/li&gt;
&lt;li&gt;Snackbar&lt;/li&gt;
&lt;li&gt;TabLayout&lt;/li&gt;
&lt;li&gt;NavigationView&lt;/li&gt;
&lt;li&gt;CoordinatorLayout&lt;/li&gt;
&lt;li&gt;AppBarLayout&lt;/li&gt;
&lt;li&gt;CollapsingToolbarLayout&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je vous laisse consulter les différents articles trouvés sur le sujet pour avoir plus de détails :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://android-developers.blogspot.fr/2015/05/android-design-support-library.html&#34;&gt;L&amp;rsquo;article sur l&amp;rsquo;Android developers blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/android-bites/first-steps-with-the-design-support-library-8dcf06230ddd&#34;&gt;L&amp;rsquo;article sur medium.com&lt;/a&gt; : qui montre les nouveautés grâce à des petites vidéos mais montre aussi les problèmes (sûrement corrigés au moment où vous lirez cet article)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://antonioleiva.com/navigation-view/&#34;&gt;Un bout d&amp;rsquo;exemple avec du code pour le NavigationView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enfin, voici le &lt;a href=&#34;https://github.com/chrisbanes/cheesesquare&#34;&gt;lien&lt;/a&gt; vers le code source de l&amp;rsquo;application exemple faite par &lt;a href=&#34;https://chris.banes.me/&#34;&gt;Chris Banes&lt;/a&gt;, montrant les principales nouveautés de cette librairie.&lt;/p&gt;

&lt;p&gt;À vos applications !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Navig&#39;Tours est disponible</title>
      <link>https://blog-7460a.firebaseapp.com/2014/12/05/navigtours_application_android_disponible</link>
      <pubDate>Fri, 05 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/12/05/navigtours_application_android_disponible</guid>
      <description>

&lt;h2 id=&#34;ça-y-est:f88e1eb9fda1b808dc5d8497e09c543c&#34;&gt;Ça y est !&lt;/h2&gt;

&lt;p&gt;L&amp;rsquo;application est disponible pour tout le monde sur le Play store.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.transport.tours&#34;&gt;
        &lt;img class=&#34;medium&#34; alt=&#34;QRcode application Navig&#39;Tours&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/qrCode_playstore_navigtours.png&#34; /&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.transport.tours&#34;&gt;
        &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://developer.android.com/images/brand/fr_generic_rgb_wo_60.png&#34; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_search.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écrans recherche d&#39;itinéraire&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_search.png&#34; alt=&#34;Écrans recherche d&#39;itinéraire&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_map.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran carte des arrêts&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_map.png&#34; alt=&#34;Écran carte des arrêts&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_favorite.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écrans arrêts favoris&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_favorite.png&#34; alt=&#34;Écrans arrêts favoris&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_stop_detail.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran arrêt&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_stop_detail.png&#34; alt=&#34;Écran arrêt&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_notifications.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écrans notifications&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_notifications.png&#34; alt=&#34;Écrans notifications&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_settings.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Écran paramètre&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/preview_settings.png&#34; alt=&#34;Écran paramètre&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;merci-aux-testeurs:f88e1eb9fda1b808dc5d8497e09c543c&#34;&gt;Merci aux testeurs&lt;/h2&gt;

&lt;p&gt;Nous avions lancé l&amp;rsquo;application en test lors de la soirée bêta organisée par &lt;a href=&#34;https://twitter.com/paloaltours&#34;&gt;@paloaltours&lt;/a&gt; à la &lt;a href=&#34;https://twitter.com/cantinebtatours&#34;&gt;cantine de Tours&lt;/a&gt; le 21 octobre dernier.
Grâce à cela, et au retours de plus de 70 testeurs, nous avons amélioré certaines choses et même corrigé quelques (rares) bugs.
Nous avons aussi pris en compte un certain nombre de remarques quant aux fonctionnalités disponibles à travers l&amp;rsquo;application.&lt;/p&gt;

&lt;p&gt;Merci donc à tous ceux qui ont testé l&amp;rsquo;application et surtout continuez à nous faire part de vos remarques et souhaits.&lt;/p&gt;

&lt;h2 id=&#34;la-suite:f88e1eb9fda1b808dc5d8497e09c543c&#34;&gt;La suite&lt;/h2&gt;

&lt;p&gt;Car ce n&amp;rsquo;est pas fini (un développement informatique l&amp;rsquo;est rarement).
Il y a encore plein de choses que l&amp;rsquo;on souhaite ajouter dans l&amp;rsquo;application (par exemple la liste des lignes du réseau Fil Bleu, recevoir des alertes lors des perturbations…).
Mais nous n&amp;rsquo;avons pas un temps illimité à consacrer à cette application. Donc des évolutions viendront s&amp;rsquo;ajouter au fil des mises à jours, mais nous ne pouvons pas donner de dates pour celles-ci.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Squelette Android 5.0</title>
      <link>https://blog-7460a.firebaseapp.com/2014/11/26/squeletteandroid5</link>
      <pubDate>Wed, 26 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/11/26/squeletteandroid5</guid>
      <description>

&lt;h2 id=&#34;pourquoi:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Pourquoi ?&lt;/h2&gt;

&lt;p&gt;Chez Code-Troopers, nous avons pas mal de projets &lt;strong&gt;Android&lt;/strong&gt;. Au début du projet, on fait toujours la même chose :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;on lance &lt;strong&gt;Android Studio&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;on créé un nouveau projet&lt;/li&gt;
&lt;li&gt;on choisit parmi les templates qu&amp;rsquo;il nous propose&lt;/li&gt;
&lt;li&gt;on ajoute nos librairies favorites&lt;/li&gt;
&lt;li&gt;on modifie le thème&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Toutes ces étapes sont répétitives. De plus, avec l&amp;rsquo;arrivée du &lt;strong&gt;Material Design&lt;/strong&gt; et
les nouvelles libraires de compatibilités, les templates que propose &lt;strong&gt;Android Studio&lt;/strong&gt; ne sont plus d&amp;rsquo;actualité. Par exemple si l&amp;rsquo;on choisit un template avec le &lt;strong&gt;NavigationDrawer&lt;/strong&gt;, il faut presque tout changer pour que celui-ci colle au nouveau standard &lt;strong&gt;Material Design&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;le-squelette:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Le squelette&lt;/h2&gt;

&lt;p&gt;Afin de faciliter la vie des troopers, j&amp;rsquo;ai décidé de créer un squelette d&amp;rsquo;application &lt;strong&gt;Android&lt;/strong&gt; contenant nos librairies favorites et le minimum visuel.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroid5/screen1.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Page d&#39;accueil du squelette&#34; class=&#34;inlineBoxes&#34;&gt;
&lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroid5/screen1.png&#34; alt=&#34;Page d&#39;accueil du squelette&#34;/&gt;
&lt;/a&gt;
&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAndroid5/screen2.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Navigation drawer&#34; class=&#34;inlineBoxes&#34;&gt;
&lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAndroid5/screen2.png&#34; alt=&#34;Navigation drawer&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;bye-bye-actionbar-hello-toolbar:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Bye bye ActionBar, Hello Toolbar&lt;/h3&gt;

&lt;p&gt;Depuis l&amp;rsquo;arrivée de &lt;strong&gt;Lollipop&lt;/strong&gt;, un nouvel élément a fait son entrée dans le SDK, la &lt;strong&gt;Toolbar&lt;/strong&gt;. Celle-ci possède quasiment les mêmes fonctionnalités que l&amp;rsquo;ActionBar. Le principal avantage, c&amp;rsquo;est qu&amp;rsquo;elle n&amp;rsquo;est pas liée magiquement au layout, c&amp;rsquo;est à nous de l&amp;rsquo;inclure.&lt;/p&gt;

&lt;h3 id=&#34;navigationdrawer:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;NavigationDrawer&lt;/h3&gt;

&lt;p&gt;Si l&amp;rsquo;on se réfère aux &lt;a href=&#34;http://www.google.com/design/spec/patterns/navigation-drawer.html&#34;&gt;specifications du &lt;strong&gt;Material Design&lt;/strong&gt;&lt;/a&gt;, le menu doit prendre toute la hauteur de l&amp;rsquo;écran et se placer sous la barre de statut. Ceci n&amp;rsquo;est pas encore bien implémenté par tout le monde. De plus, l&amp;rsquo;implémentation n&amp;rsquo;est pas si simple. J&amp;rsquo;ai donc décidé de l&amp;rsquo;inclure dans ce squelette en ajoutant par là même, l&amp;rsquo;intéraction avec la &lt;strong&gt;Toolbar&lt;/strong&gt; (pour pouvoir avoir l&amp;rsquo;icône hamburger sans avoir à ajouter de ressources). Je tiens au passage à remercier l&amp;rsquo;auteur de ce &lt;a href=&#34;http://stackoverflow.com/questions/26745300/navigation-drawer-semi-transparent-over-status-bar-not-working&#34;&gt;post&lt;/a&gt; qui m&amp;rsquo;a grandement aidé.&lt;/p&gt;

&lt;h3 id=&#34;librairies:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Librairies&lt;/h3&gt;

&lt;p&gt;Pour l&amp;rsquo;instant, j&amp;rsquo;ai ajouté seulement trois librairies :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jakewharton.github.io/butterknife/&#34;&gt;&lt;strong&gt;ButterKnife&lt;/strong&gt;&lt;/a&gt; pour l&amp;rsquo;injection de view&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://square.github.io/dagger/&#34;&gt;&lt;strong&gt;Dagger&lt;/strong&gt;&lt;/a&gt; pour l&amp;rsquo;injection du reste&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://square.github.io/picasso/&#34;&gt;&lt;strong&gt;Picasso&lt;/strong&gt;&lt;/a&gt; pour le chargement et la gestion des images&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;le-thème:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Le thème&lt;/h3&gt;

&lt;p&gt;Je me suis basé sur le thème par défaut de &lt;strong&gt;AppCompat&lt;/strong&gt;, je l&amp;rsquo;ai ensuite modifié pour changer les couleurs des barres de statut et d&amp;rsquo;action lorsque le téléphone est sous &lt;strong&gt;Lollipop&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;projet:d73e07438734fa8a3e6c6162f44beb59&#34;&gt;Projet&lt;/h2&gt;

&lt;p&gt;Voilà, vous pouvez trouver ce projet sur notre &lt;a href=&#34;https://github.com/code-troopers/material-android-bootstrap&#34;&gt;github&lt;/a&gt;. Il va sûrement évoluer avec le temps pour ajouter d&amp;rsquo;autres choses afin d&amp;rsquo;avoir des exemples d&amp;rsquo;implémentations. Vos commentaires, issues sont les bienvenues, je me ferai un plaisir d&amp;rsquo;y répondre et si vous avez d&amp;rsquo;autres idées, vous pouvez toujours forker.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Appli Navig&#39;Tours : ouverture aux bêta-testeurs</title>
      <link>https://blog-7460a.firebaseapp.com/2014/10/22/filbleu_tours_application_android</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/10/22/filbleu_tours_application_android</guid>
      <description>&lt;p&gt;
Depuis déjà quelques temps, l&#39;équipe travaille sur une application &lt;code&gt;Android&lt;/code&gt; pour consulter les horaires des bus et tram du réseau &lt;b&gt;Fil Bleu&lt;/b&gt;.
&lt;br/&gt;
Et comme hier soir a eu lieu la première soirée bêta-test organisée à la &lt;a href=&#34;http://paloaltours.org/event/soiree-beta-testing/&#34;&gt;cantine de Tours&lt;/a&gt;, nous avons décidé de lancer officiellement notre campagne de bêta-test aujourd&#39;hui.
&lt;/p&gt;



&lt;h3&gt;Pourquoi une telle application ?&lt;/h3&gt;

    &lt;p&gt;
        Nous sommes tous les 7 tourangeaux, il nous arrive donc parfois de prendre le bus, et bien que le site &lt;a href=&#34;www.filbleu.fr&#34;&gt;Fil Bleu&lt;/a&gt; soit de mieux en mieux chaque année, il n&#39;offre pas toutes les fonctionnalités et ni le confort que peut apporter une application mobile. Et pour le moment sur le Play Store il n&#39;y a que l&#39;application &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.gitorious.scrapfilbleu.android&#34;&gt;Fil@Tours&lt;/a&gt;, mais celle-ci n&#39;est visuellement plus vraiment adaptée / conforme à la philosophie des applications Google.
    &lt;/p&gt;
    &lt;p&gt;
        Donc puisque le besoin d&#39;une telle application est présent et que nous aimons bien relever les défis techniques, nous avons eu envie de nous lancer dans ce développement.
    &lt;/p&gt;
&lt;div style=&#34;text-align:center;&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/search.png&#34; data-lightbox=&#34;group-1&#34; title=&#34;Navig&#39;Tours&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/navig_tours.gif&#34; alt=&#34;Navig&#39;Tours&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;Pourquoi des bêta-testeurs ?&lt;/h3&gt;
    &lt;p&gt;
        Dans le monde du développement logiciel c&#39;est une phase du projet très couramment utilisée. Cela permet de faire un &lt;b&gt;test grandeur nature&lt;/b&gt; du produit créé, afin de récolter des &lt;b&gt;retours utilisateurs&lt;/b&gt; (surtout les bugs) et d&#39;avoir le temps de les corriger avant la sortie officielle.
        C&#39;est d&#39;ailleurs de plus en plus fréquent dans l&#39;univers du jeu vidéo. On entend bien souvent parler de bêta ouverte ou bêta fermée peu avant la sortie officielle d&#39;un jeu.
    &lt;/p&gt;
    &lt;p&gt;
        Nous souhaitons donc passer par une phase de bêta plus ou moins longue (on n&#39;a pas encore fixé de date de fin) afin de développer une application qui collera au mieux aux besoins des futurs utilisateurs.
        C&#39;est pour cela que l&#39;on cherche des testeurs fous qui nous feront part de toutes leur envies d&#39;évolutions sur l&#39;appli, de tous les changements qu&#39;ils voudraient voir apporter, et aussi capables de tolérer quelques plantages (mais ça ne devrait pas arriver).
    &lt;/p&gt;
    &lt;p&gt;
        L&#39;objectif pour nous est d&#39;atteindre une centaine de bêta-testeurs afin de recueillir un panel d&#39;utilisateur et d&#39;utilisation assez large et le plus représentatif possible.
    &lt;/p&gt;

&lt;h3&gt;Temps perso&lt;/h3&gt;
    &lt;p&gt;
    Cette application est développée par l&#39;équipe sur notre temps perso, ce qui veut dire que nous ne sommes pas payés pour cela.
    Donc même si l&#39;on souhaite faire le truc le plus propre, le plus beau, le plus simple (un truc parfait donc), nous ne sommes pas à plein temps sur ce développement.
    Dans cette optique, merci d&#39;avance de votre indulgence si parfois il nous arrive de ne pas réagir du tac au tac si une petite erreur survient.
    &lt;/p&gt;
    &lt;p&gt;
    Cependant nous ne sommes pas totalement barges, on ne recrée pas un algo de recherche du meilleur trajet. Ce qui signifie que les informations, horaires, itinéraires, que nous utilisons sont récupérés après avoir interrogé les serveurs Fil Bleu.
    Donc merci de ne pas nous tenir responsables si des mauvais horaires sont retournés, ou si un bus tombe en panne...
    &lt;/p&gt;

&lt;h3&gt;Pour quelle version d&#39;Android ?&lt;/h3&gt;
    &lt;p&gt;
    Nous souhaitons que le public le plus large puisse profiter de cette application.
    Pour le moment il n&#39;y a pas vraiment de restriction sur la version d&#39;Android à avoir sur son téléphone. Il faut posséder un téléphone qui soit au moins en &lt;code&gt;version 2.3&lt;/code&gt; (Gingerbread), donc les téléphones datant, au plus, de 2011.
    &lt;/p&gt;
    &lt;p&gt;
    Mais nous gardons la possibilité de faire évoluer ce choix si un besoin ou une contrainte technique venait à se présenter.
    &lt;/p&gt;

&lt;h3&gt;On pourra faire quoi avec ?&lt;/h3&gt;
    &lt;p&gt;
    En plus de pouvoir rechercher des horaires, ce qui est le minimum vital, l&#39;application offre pour le moment les fonctionnalités suivantes :
    &lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;Affichage des arrêts en fonction de leur &lt;b&gt;proximité&lt;/b&gt; ;&lt;/li&gt;
        &lt;li&gt;Mise en &lt;b&gt;favoris&lt;/b&gt; d&#39;arrêts pour les avoir toujours en premier ;&lt;/li&gt;
        &lt;li&gt;Consultation de la &lt;b&gt;carte&lt;/b&gt; de tous les arrêts ;&lt;/li&gt;
        &lt;li&gt;Utilisation de la carte pour choisir un arrêt de départ ou d&#39;arrivée ;&lt;/li&gt;
        &lt;li&gt;Planification de &lt;b&gt;notification&lt;/b&gt; pour être averti avant le passage d&#39;un bus.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
    C&#39;est peu, mais c&#39;est un début, nous avons plein d&#39;idées mais pas forcément beaucoup de temps. Encore une fois, c&#39;est pour cela que l&#39;on souhaite recueillir les besoins les plus récurrents.
    &lt;/p&gt;

&lt;h3&gt;Et à quoi ça ressemble ?&lt;/h3&gt;
    &lt;p&gt;
    Pour le moment l&#39;interface ressemble à ça :
    &lt;/p&gt;
    &lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/search.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de recherche d&#39;itinéraire&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/search.png&#34; alt=&#34;Splash screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/commutes1.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de plusieurs trajets possibles&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/commutes1.png&#34; alt=&#34;Menu screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/commutes2.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de plusieurs trajets possibles - bis&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/commutes2.png&#34; alt=&#34;Home screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/detail1.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de détail d&#39;un trajet avec plusieurs correspondances&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/detail1.png&#34; alt=&#34;Artist screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/detail2.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de détail d&#39;un trajet avec le tracé sur la carte&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/detail2.png&#34; alt=&#34;Artist screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/notif.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Notification pour un trajet&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/notif.png&#34; alt=&#34;Artist screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/map1.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de la carte de tours avec l&#39;emplacement des arrêts&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/map1.png&#34; alt=&#34;Artist screen&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/map2.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Écran de la carte de tours avec l&#39;emplacement des arrêts - bis&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/map2.png&#34; alt=&#34;Artist screen&#34;/&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;p&gt;
    Mais comme je l&#39;ai dit nous restons très ouverts sur les retours. Donc il y a de grandes chances pour que cela change en fonction des commentaires qui nous seront remontés.
    &lt;/p&gt;

&lt;h3&gt;Bonus : les notifications wear&lt;/h3&gt;
    &lt;p&gt;
    Si vous avez la chance de posséder une &lt;b&gt;google watch&lt;/b&gt;, vous pourrez bénéficier de notifications tout spécialement prévues lorsque vous planifirez une alerte sur un trajet. Et voilà ce que ça donne :
    &lt;/p&gt;
    &lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-1.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-1.png&#34; alt=&#34;Google watch 1&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-2.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-2.png&#34; alt=&#34;Google watch 2&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-3.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-3.png&#34; alt=&#34;Google watch 3&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-4.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-4.png&#34; alt=&#34;Google watch 4&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-5.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-5.png&#34; alt=&#34;Google watch 5&#34;/&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-6.png&#34; data-lightbox=&#34;group-3&#34; title=&#34;&#34; class=&#34;inlineBoxes&#34;&gt;
            &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postFilBleu/watch-6.png&#34; alt=&#34;Google watch 6&#34;/&gt;
        &lt;/a&gt;
    &lt;/div&gt;
&lt;h3&gt;Je veux être bêta-testeur !&lt;/h3&gt;
    &lt;p&gt;
        &lt;del&gt;Pour cela, rien de plus simple, et en plus vous avez le choix :&lt;/del&gt;
    &lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;del&gt;&lt;b&gt;Rejoindre notre communauté Google+&lt;/b&gt; &lt;a href=&#34;https://plus.google.com/communities/103478157157356210565&#34;&gt;Code-Troopers Bêta&lt;/a&gt;, ce qui donne immédiatement accès à la bêta ;&lt;/del&gt;&lt;/li&gt;
        &lt;li&gt;&lt;del&gt;&lt;b&gt;Inscrivez-vous avec l’email de votre compte Android&lt;/b&gt; ci-après, et nous vous ajouterons dans la liste des bêta-testeurs. Ensuite, en fonction de l’heure à laquelle nous recevrons la demande, vous aurez accès à la bêta plus ou moins rapidement.&lt;/del&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p style=&#34;color:red&#34;&gt;La phase de bêta-test est terminée. L&#39;application Navig&#39;Tours est accessible pour tous sur le Play Store :&lt;/p&gt;
    &lt;div style=&#34;text-align:center;margin-bottom:50px&#34;&gt;
        &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.transport.tours&#34;&gt;
            &lt;img class=&#34;medium&#34; alt=&#34;QRcode application Aucard de Tours&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postNavigTours2/qrCode_playstore_navigtours.png&#34; /&gt;
        &lt;/a&gt;
        &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.transport.tours&#34;&gt;
            &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://developer.android.com/images/brand/fr_generic_rgb_wo_60.png&#34; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;

    &lt;p&gt;
        Et pour vous tenir informé des dernières nouveautées vous pouvez suivre le twitter dédié &lt;a href=&#34;https://twitter.com/NavigTours&#34;&gt;@NavigTours&lt;/a&gt; et bien sur le compte &lt;a href=&#34;https://twitter.com/codetroopers&#34;&gt;@CodeTroopers&lt;/a&gt;.
    &lt;/p&gt;

&lt;h3&gt;[ÉDIT]&lt;/h3&gt;
    &lt;p&gt;
        Fil Bleu étant une marque appartenant à la communauté d&#39;agglomération Tour(s)Plus, nous nous efforçons de ne pas employer les termes &#34;Appli Fil Bleu&#34; afin de ne pas apporter de confusion.
    &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coursera - Android Handheld Systems : 3ème et dernier cours</title>
      <link>https://blog-7460a.firebaseapp.com/2014/07/23/courseraandroid2</link>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/07/23/courseraandroid2</guid>
      <description>&lt;h3&gt;On Enchaîne !&lt;/h3&gt;
&lt;p&gt;
    Ce lundi 21 juillet vient de débuter &lt;a
        href=&#34;https://class.coursera.org/mobilecloud-001&#34;&gt;le 3ème cours&lt;/a&gt; de la série sur le développement Android proposée par Coursera, alors que
    &lt;a href=&#34;https://class.coursera.org/posa-002&#34;&gt;le second&lt;/a&gt; vient à peine de se terminer et que les résultats n&#39;ont pas encore été envoyés.
    Pour rappel le cours qui vient de s’achever a traité en grande majorité tout ce qui touche aux Threads, Services (binding, starting), tâche synchrone &amp; asynchrone, Messenger, AIDL.... (rien que ça)
&lt;/p&gt;

&lt;p&gt;
    La prochaine étape que nous propose Coursera intitulée
    &lt;b&gt;Programming Cloud Services for Android Handheld Systems&lt;/b&gt; sera axée sur la création d&#39;applications qui communiqueront avec des serveurs &#34;dans le cloud&#34;.
    Ce qui semble correspondre à la majorité des applications actuelles offrant un minimum de fonctionnalités.
&lt;/p&gt;
&lt;h3&gt;Il faut emporter son pc à la plage ?&lt;/h3&gt;
&lt;p&gt;
    Pas de soucis pour suivre ce cours pendant les vacances. Initialement prévu sur 6 semaines il a été étendu sur 10 semaines,
    et les jalons habituels pour rendre les exercices (une fois par semaine) on été enlevés.
    Ainsi aucun problème pour partir 2 ou 3 semaines en vacances, il n’y aura pas de pénalité ni de retard pris dans le cheminement du cours.
&lt;/p&gt;
&lt;p&gt;
    En revanche, le point négatif de ce cours risque d’être les supports. En effet seules des vidéos seront disponibles,
    &lt;a href=&#34;https://www.coursera.org/instructor/juleswhite&#34;&gt;Jules White&lt;/a&gt; travaillant avec un tableau transparent sur lequel il dessine, aucun silde ne sera téléchargeable pour lire à son rythme.
&lt;/p&gt;

&lt;h3&gt;&#34;Go to class&#34;&lt;/h3&gt;
&lt;p&gt;
    Les premières vidéos sont déjà en ligne, donc si vous êtes intéressé, il est encore temps de s’inscrire pour travailler tout l’été,
    &lt;a href=&#34;https://www.coursera.org/course/mobilecloud&#34;&gt;c&#39;est par là&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;Retours sur le cours N°2 &lt;/h3&gt;
&lt;p&gt;
    J&#39;ai vraiment apprécié ce cours, principalement parce que  &lt;a href=&#34;https://www.coursera.org/instructor/douglasschmidt&#34;&gt;Douglas Schmidt&lt;/a&gt; maîtrise son sujet.
    Autant sur le fonctionnement d&#39;Android qu&#39;il a profondément étudié ou sur les patterns qu&#39;il explique et pour lesquels il est reconnu. Ce fut vraiment pour moi, du temps bien investi.
&lt;/p&gt;
&lt;p&gt;
    Mais je voudrais surtout revenir sur l&#39;évaluation des exercices à faire.
    Je l’avais évoqué dans &lt;a
        href=&#34;http://code-troopers.com/2014/05/15/CourseraAndroid.html&#34;&gt;mon précédent billet&lt;/a&gt;, la façon dont chacun allait être évalué était une première pour moi (sur Coursera).
    Il s’agissait de noter le travail d’autres étudiants (au moins 5 pour chaque exercice)
&lt;/p&gt;
&lt;p&gt;
    Comme dans toutes situations, il y a du bon et du mauvais. Personnellement je n&#39;ai pas tellement aimé cette façon de faire, notamment pour les raisons suivantes :
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Trop gourmand en temps car cela demande le temps de regarder la longue vidéo d&#39;explication des solutions possibles puis en plus celui pour évaluer au moins 5 élèves;&lt;/li&gt;
    &lt;li&gt;Feedback lent : une semaine pour faire l&#39;exercice puis une nouvelle pour que tout le monde s&#39;entre note, si on a fait quelque chose de travers, c&#39;est quasi oublié;&lt;/li&gt;
    &lt;li&gt;Noter le travail de quelqu&#39;un n&#39;est pas quelque chose d&#39;évident ni de naturel (même si les points à prendre compte étaient donnés).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    Mais j&#39;en retiens tout de même ces quelques points positifs :
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Lire du code d’autres personnes, ça permet de voir d’autres approches et façons de penser(même si là j&#39;ai rarement vu 2 solutions différentes);&lt;/li&gt;
    &lt;li&gt;Avoir des commentaires sur ses propres solutions (positifs ou négatifs, mais dans les deux cas quelqu’un a pris le temps de regarder, ce qui n’arrive pas si souvent dans la vraie vie).&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Les MOOCs&lt;/h3&gt;
&lt;p&gt;
    Pour le moment chacun des cours que j&#39;ai suivi m&#39;a apporté quelque chose, que ça soit une nouvelle façon de réfléchir (principalement pour le Scala)
    ou de nombreux éclaircissements sur la façon dont certains systèmes fonctionnent ou doivent fonctionner.
    Donc si vous avez un peu de temps, même simplement pour regarder les slides ou les vidéos, je vous invite vivement à suivre des MOOC et ce quelque soit la plateforme.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>L&#39;application Terres du Son est disponible</title>
      <link>https://blog-7460a.firebaseapp.com/2014/06/24/tds2</link>
      <pubDate>Tue, 24 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/06/24/tds2</guid>
      <description>&lt;p&gt;C&amp;rsquo;était annoncé, c&amp;rsquo;est maintenant chose faite ! L&amp;rsquo;application android pour &lt;em&gt;Terres du Son 2014&lt;/em&gt; est sur le Play Store.&lt;/p&gt;

&lt;p&gt;Développée en partenariat avec l&amp;rsquo;équipe de TDS, cette application vous offre la possibilité de :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consulter la programmation jour par jour&lt;/li&gt;
&lt;li&gt;Être notifié avant le passage d&amp;rsquo;un artiste (pour ne pas rater le début)&lt;/li&gt;
&lt;li&gt;Être notifié avant le départ des navettes Fil Vert (pour ne pas rentrer à pied !)&lt;/li&gt;
&lt;li&gt;Écouter la playlist officielle du festival&lt;/li&gt;
&lt;li&gt;Écouter le dernier album de chaque artiste&lt;/li&gt;
&lt;li&gt;Accéder à une fiche détaillée de l&amp;rsquo;artiste (liens web, vidéo, biographie…)&lt;/li&gt;
&lt;li&gt;Connaître en temps réel ce qui passe et ce qui va suivre pour chacune des scènes&lt;/li&gt;
&lt;li&gt;Consulter les horaires des navettes Fil Vert (qui font les aller-retours entre la gare routière de Tours et l&amp;rsquo;entrée du site)&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/launch.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Splash screen de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/launch.png&#34; alt=&#34;Splash screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/home.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Menu de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/home.png&#34; alt=&#34;Menu screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/prog.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Programme par jour et par scène&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/prog.png&#34; alt=&#34;Programme screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/artiste.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Une fiche artiste de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/artiste.png&#34; alt=&#34;Artist screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/notifs.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Récap de notifications plannifiées pour les navettes&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/notifs.png&#34; alt=&#34;Alerte screen&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Rendez-vous dès à présent sur le Play Store pour télécharger l&amp;rsquo;appli.&lt;br/&gt;
Terres du Son est engagé dans une démarche de développement durable, télécharger l&amp;rsquo;application, c&amp;rsquo;est aussi imprimer moins de programmes et donc réduire les déchets.&lt;br/&gt;
Et comme pour tous les festivals en région Centre, pensez à venir avec votre gobelet réutilisable.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.terresduson&#34;&gt;
      &lt;img class=&#34;medium&#34; alt=&#34;QRcode application Terres du Son&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS2/qrcode_playstore_tds.png&#34; /&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.terresduson&#34;&gt;
      &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://developer.android.com/images/brand/fr_generic_rgb_wo_60.png&#34; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Tous les retours, positifs comme négatifs sont les bienvenus. Alors n&amp;rsquo;hésitez pas à donner votre avis, nous en tiendrons compte pour les prochaines versions de l&amp;rsquo;application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;NB&lt;/code&gt; : pour profiter pleinement des fonctionnalités d&amp;rsquo;écoute de la playlist Terres du Son et des albums des artistes
il est nécessaire de connecter son compte &lt;a href=&#34;http://www.deezer.com/offers/premiumplus&#34;&gt;premium+ Deezer&lt;/a&gt;, dans le cas contraire, Deezer limite l&amp;rsquo;écoute à 30 secondes par morceau.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coursera - Android Handheld Systems : 2ème cours</title>
      <link>https://blog-7460a.firebaseapp.com/2014/05/15/courseraandroid</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/05/15/courseraandroid</guid>
      <description>&lt;h3&gt;Coursera &amp; Android&lt;/h3&gt;
&lt;p&gt;
   Coursera propose depuis ce Lundi (12 mai) &lt;a href=&#34;https://class.coursera.org/posa-002&#34;&gt;un nouveau cours de développement Android&lt;/a&gt;.
   Il s&#39;agit, en fait, du second cours d&#39;une série de trois visant à maitriser le développement d&#39;application Android.
&lt;/p&gt;
&lt;p&gt;
   &lt;a href=&#34;https://class.coursera.org/android-001&#34;&gt;Le premier cours, sur le développement Android,&lt;/a&gt; avait comme thème (et comme son nom l&#39;indique) la découverte de la programmation d&#39;application.
   Cela en abordant les classes et notions majeures telles que les Activity, View, Fragment ou les Intent, ainsi que tous les cycles de vie correspondants, ce qui a pu permettre au plus grand nombre de s&#39;y initier à moindre frais.
&lt;/p&gt;

&lt;h3&gt;Le cours&lt;/h3&gt;
&lt;p&gt;
    Ce nouveau cours a pour thème principal l&#39;apprentissage des bons patterns et l&#39;utilisation de plusieurs frameworks afin de réaliser avec brio les applications Android qui ont recours à des services réseaux.
&lt;/p&gt;
&lt;p&gt;
    Présenté par &lt;a href=&#34;https://www.coursera.org/instructor/douglasschmidt&#34;&gt;Douglas C. Schmidt&lt;/a&gt; (qui parle plutôt vite dans les premières vidéos) et &lt;a href=&#34;https://www.coursera.org/instructor/juleswhite&#34;&gt;C. Jules White&lt;/a&gt;, les cours (vidéos et slides) semblent toujours aussi bien construits et organisés.
    Ils sont pour le moment faciles à suivre, et donc faisaibles même si vous n&#39;avez pas suivi le premier cours.

&lt;/p&gt;
&lt;h3&gt;Exercices&lt;/h3&gt;
&lt;p&gt;
    Pour ce qui est des excercices, il y a du changement. Contrairement au cours précédent où il fallait uniquement collecter quelques lignes de log pour prouver la réussite d&#39;un exercice, il va falloir cette fois fournir les fichiers sources correspondant au travail réalisé. Ce qui est, je trouve, une bien meilleure façon de faire et surtout fait beaucoup plus &#39;pro&#39;.
&lt;/p&gt;
&lt;p&gt;
    Et justement, en parlant d&#39;évaluation, nouveauté (pour moi du moins) il va falloir évaluer le travail des autres étudiants.
    En effet pour qu&#39;un exercice réalisé soit validé, il faudra, après l&#39;envoi de son propre travail, noter celui d&#39;autres étudiants, en utilisant leurs codes sources et en répondant à des questions / critères spécifiques posés par la plateforme.
&lt;/p&gt;
&lt;p&gt;
    Petit point négatif à noter, l&#39;IDE à utiliser est Eclipse, c&#39;est sous cet environnement que les résultats seront testés.
    Mais comme cela n&#39;a pas été un problème lors du premier cours de pouvoir utiliser Android Studio, il faut espérer qu&#39;il en sera de même.
&lt;/p&gt;
&lt;h3&gt;Inscription&lt;/h3&gt;
&lt;p&gt;
    Il est encore temps de s&#39;incrire puisque les premières vidéos n&#39;ont été diffusées que ce Lundi.
    Et même si vous n&#39;avez pas le temps pour faire tous les exercices, regarder les vidéos (ou bien les slides) apporte déjà bien plus d&#39;informations, que pourrait le faire une conférence ou une formation.
&lt;/p&gt;

&lt;h3&gt;Certification&lt;/h3&gt;
&lt;p&gt;
    Et pour ceux qui le souhaitent, il est possible d&#39;obtenir un certificat officiel provenant de l&#39;université de Vanderbilt (origine des deux profs) et Coursera, ce qui permet de faire connaître et d&#39;attester de votre réussite dans ces cours.
    Mais évidement pour cela il faudra payer (49$), car rien n&#39;est gratuit.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sortie de l&#39;appli Aucard de Tours</title>
      <link>https://blog-7460a.firebaseapp.com/2014/04/14/aucard2</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/04/14/aucard2</guid>
      <description>&lt;p&gt;Suite à notre &lt;a href=&#34;http://code-troopers.com/2014/03/17/Aucard.html&#34;&gt;partenariat avec Radio Béton&lt;/a&gt;, nous vous annonçons la mise à disposition sur le Play Store de l&amp;rsquo;application officielle du festival Aucard de Tours 2014.&lt;/p&gt;

&lt;p&gt;Comme vous le savez sûrement le festival Aucard de Tours, qui souhaite favoriser la découverte, ne divulgue pas la programmation heure par heure. C&amp;rsquo;est pourquoi ce n&amp;rsquo;est qu&amp;rsquo;une fois rentrés dans l&amp;rsquo;enceinte du festival que vous prenez connaissance du programme de la soirée &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/aucard_tableau.jpg&#34; title=&#34;Tableau de la programmation&#34; data-lightbox=&#34;image-1&#34; class=&#34;inlineBoxes&#34;&gt; sur le tableau&lt;/a&gt;. Grâce à l&amp;rsquo;application Android, vous pourrez scanner un QR code (sur ce même tableau) pour disposer du programme complet de la soirée sur votre mobile. Fini les allers-retours au tableau pour savoir quel est le prochain concert.&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen1.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Splash screen de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen1.png&#34; alt=&#34;Splash screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen2.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Menu de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen2.png&#34; alt=&#34;Menu screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen3.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Home screen de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen3.png&#34; alt=&#34;Home screen&#34;/&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen4.png&#34; data-lightbox=&#34;group-2&#34; title=&#34;Une fiche artiste de l&#39;application&#34; class=&#34;inlineBoxes&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/screen4.png&#34; alt=&#34;Artist screen&#34;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Ainsi avec cette application vous aurez la possibilité de :
 * Consulter la programmation jour par jour
 * Accéder à toutes les informations des Apérocks
 * Écouter la playlist officielle du festival
 * Écouter le dernier album de chaque artiste
 * Être notifié avant le passage d&amp;rsquo;un artiste (pour ne pas rater le début)
 * Accéder à une fiche détaillée de l&amp;rsquo;artiste (liens web, vidéo, biographie…)
 * Connaître en temps réel ce qui passe et ce qui va suivre (plus besoin de retourner voir le tableau de la programmation à l&amp;rsquo;entrée)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;Attention&lt;/code&gt; : pour profiter pleinement des fonctionnalités d&amp;rsquo;écoute de la playlist Aucard et des albums des artistes
il est nécessaire de connecter son compte &lt;a href=&#34;http://www.deezer.com/offers/premiumplus&#34;&gt;premium+ Deezer&lt;/a&gt;, dans le cas contraire, Deezer limite l&amp;rsquo;écoute à 30 secondes par morceau.&lt;/em&gt;&lt;/p&gt;

&lt;div style=&#34;text-align:center;margin:50px&#34;&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.aucard&#34;&gt;
      &lt;img class=&#34;medium&#34; alt=&#34;QRcode application Aucard de Tours&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard2/qrcode_playstore_aucard.png&#34; /&gt;
    &lt;/a&gt;
    &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codetroopers.aucard&#34;&gt;
      &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://developer.android.com/images/brand/fr_generic_rgb_wo_60.png&#34; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;PS : n&amp;rsquo;oubliez pas, Aucard de Tours est un festival éco-citoyens, venez avec votre gobelet réutilisable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Application officielle Android pour Terres du son 2014</title>
      <link>https://blog-7460a.firebaseapp.com/2014/04/08/terresduson</link>
      <pubDate>Tue, 08 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/04/08/terresduson</guid>
      <description>&lt;p&gt;Comme vous avez pu le voir dans un &lt;a href=&#34;http://code-troopers.com/2014/03/17/Aucard.html&#34;&gt;article précédent&lt;/a&gt;, Code-Troopers est en train de réaliser l&amp;rsquo;application officielle Android pour &lt;a href=&#34;http://www.radiobeton.com/aucard/&#34;&gt;Aucard de Tours&lt;/a&gt;. Deuxième bonne nouvelle, nous réalisons aussi l&amp;rsquo;application officielle Android pour un autre festival tourangeau, &lt;a href=&#34;http://terresduson.com/&#34;&gt;Terres du son&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a style=&#34;display: inline&#34; href=&#34;https://blog-7460a.firebaseapp.com/images/postTDS/tds.png&#34; data-lightbox=&#34;image-0&#34; title=&#34;Logo Terres du son&#34;&gt;
        &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postTDS/tds.png&#34; alt=&#34;tds logo&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Si vous êtes à Tours, vous connaissez sûrement ce festival qui se déroule cette année le 11, 12, 13 Juillet 2014 au Domaine de Candé dans la ville de Monts (37). La programmation complète n&amp;rsquo;a pas été encore annoncée mais quelques grands noms sont déjà sortis comme -M-, Woodkid ou Ayo.&lt;/p&gt;

&lt;p&gt;Cette année vous pourrez retrouver tout le programme directement sur votre mobile Android. De plus, vous allez avoir la possibilité de connaître les concerts en cours sur toutes les scènes du festival, y compris les scènes villages (partie gratuite du festival). Vous ne pourrez plus louper le début d&amp;rsquo;un concert grâce aux notifications que vous pourrez configurer sur vos artistes favoris. Enfin, l&amp;rsquo;application vous donnera des informations sur tous les artistes du festival avec des liens et la radio Deezer de l&amp;rsquo;artiste.&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;application devrait bientôt être disponible sur le Play Store, suivez-nous sur &lt;a href=&#34;https://twitter.com/codetroopers&#34;&gt;twitter&lt;/a&gt; pour être les premiers à l&amp;rsquo;installer.&lt;/p&gt;

&lt;p&gt;Comme pour l&amp;rsquo;application Aucard de Tours, vous pouvez faire partie des betas testeurs, laissez un commentaire et vous serez peut-être sélectionnés.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code-Troopers &#43; Aucard de Tours = Appli Android</title>
      <link>https://blog-7460a.firebaseapp.com/2014/03/17/aucard</link>
      <pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/03/17/aucard</guid>
      <description>&lt;p&gt;
   L&#39;équipe Code-Troopers est fière de vous annoncer son implication dans la vie tourangelle via la réalisation de
   l&#39;application officielle du festival &lt;a href=&#34;http://www.radiobeton.com/aucard/&#34; &gt;Aucard de Tours&lt;/a&gt;.
&lt;/p&gt;


&lt;a href=&#34;https://blog-7460a.firebaseapp.com/images/postAucard/aucard2014.jpg&#34; data-lightbox=&#34;image-1&#34; title=&#34;Affiche du festival Aucard de Tours 2014&#34;&gt;
    &lt;img class=&#34;mini&#34; src=&#34;https://blog-7460a.firebaseapp.com/images/postAucard/aucard2014.jpg&#34; alt=&#34;Affiche du festival Aucard de Tours 2014&#34;/&gt;
&lt;/a&gt;

&lt;p&gt;
    Ainsi cette année, pour la 29ème édition d&#39;Aucard, vous pourrez tous avoir le programme dans votre poche.
&lt;/p&gt;
&lt;p&gt;
   En plus d&#39;avoir accès au programme de chaque soirée, vous pourrez consulter les fiches des artistes.
   Celles ci seront agrémentées d&#39;un player deezer pour écouter toutes les chansons.
   Vous n&#39;aurez donc aucune excuse pour ne pas connaître tous les refrains par coeur.
   L&#39;application vous donnera aussi des infos sur les apérock qui se passent en ville.
&lt;/p&gt;


&lt;p&gt;
    Nous vous annoncerons bientôt de la mise à dispo de l&#39;appli sur le Play Store.
    En attendant restez à l&#39;écoute de &lt;a href=&#34;http://www.radiobeton.com/www/&#34;&gt;radio béton&lt;/a&gt; pour être averti de toute la prog.
&lt;/p&gt;


&lt;p&gt;
    Si vous voulez faire parti des betas testeurs de l&#39;application n&#39;hésitez pas à laisser un commentaire et vous serez peut être sélectionnés.
&lt;/p&gt;


&lt;p&gt;
    PS : Nous présentons par avance nos excuses au public qui possède un iPhone.
    En effet, l&#39;application (pour cette année du moins) n&#39;est pas disponible sur l&#39;Apple Store.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C&#39;est reparti pour un tour</title>
      <link>https://blog-7460a.firebaseapp.com/2014/01/01/cestreparti</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog-7460a.firebaseapp.com/2014/01/01/cestreparti</guid>
      <description>&lt;p&gt;Salut à vous jeunes padawans et bienvenue sur le nouveau blog des Code-Troopers tourangeaux.&lt;/p&gt;

&lt;p&gt;Le redesign du site indique le réel lancement d&#39;activité de Code-Troopers, nous sommes aujourd&#39;hui 7 développeurs
   disponibles afin de réaliser des projets, alors n&#39;hésitez pas à nous contacter ou à parler de nous.
&lt;/p&gt;


&lt;p&gt;Vous pouvez aussi nous suivre sur les différents réseaux sociaux pour être au courant de notre actualité ainsi que les
   nouveaux articles de ce blog.
&lt;/p&gt;

&lt;p&gt;Enfin, si vous êtes sur Tours et comme nous, présents sur les différents événements de la région (JUG, Startup Week-End), nous
   nous ferons une joie de discuter avec vous afin de partager nos expériences.
&lt;/p&gt;

&lt;p&gt;Comme on dit chez nous, &#34;may the code be with you&#34; et à bientôt.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>