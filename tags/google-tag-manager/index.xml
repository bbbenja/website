<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Tag Manager on Code-Troopers - Vous avez une idée, nous la réalisons</title>
    <link>http://test.code-troopers.com/tags/google-tag-manager/</link>
    <description>Recent content in Google Tag Manager on Code-Troopers - Vous avez une idée, nous la réalisons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Wed, 30 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://test.code-troopers.com/tags/google-tag-manager/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Android : Feature Toggle avec Google Tag Manager</title>
      <link>http://test.code-troopers.com/2016/03/30/android_google_tag_manager_feature_toggle</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://test.code-troopers.com/2016/03/30/android_google_tag_manager_feature_toggle</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le concept de &lt;code&gt;feature toggle&lt;/code&gt; est bien pratique en tant que développeur si l&amp;#8217;on souhaite faire évoluer sa base de code source à un rythme différent de celui des livraisons et des fonctionnalités.
C&amp;#8217;est souvent le cas lorsqu&amp;#8217;il y a autour du produit une équipe marketing / communication qui s&amp;#8217;occupe d&amp;#8217;annoncer telle ou telle nouvelle fonctionnalité.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le problème avec Android c&amp;#8217;est qu&amp;#8217;il peut être vite problématique d&amp;#8217;utiliser ces features toggle, car une fois l&amp;#8217;application arrivée sur le téléphone des utilisateurs le développeur n&amp;#8217;a plus
la possibilité de changer la valeur des flags autrement qu&amp;#8217;en relivrant l&amp;#8217;application, ce qui peut vite se terminer par du spam d&amp;#8217;updates si les activations/désactivations sont trop fréquentes ou trop rapprochées.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;C&amp;#8217;est là qu&amp;#8217;entre en jeu &lt;code&gt;Google Tag Manager&lt;/code&gt;, cet outil made by Google va nous offrir la possibilité d&amp;#8217;activer/désactiver lesdites fonctionnalités et cela sans avoir à redéployer l&amp;#8217;application sur le store.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_google_tag_manager_la_configuration&#34;&gt;Google Tag Manager : La configuration&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pour commencer, il faut aller dans l&amp;#8217;interface dédiée de &lt;a href=&#34;https://tagmanager.google.com&#34;&gt;Google Tag Manager&lt;/a&gt; afin de générer la configuration nécessaire pour notre application.
C&amp;#8217;est via cette IHM et avec les informations que l&amp;#8217;on va y ajouter que l&amp;#8217;on pourra revenir plus tard et modifier des valeurs qui seront prises en compte dans l&amp;#8217;application Android.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;La mise en place d&amp;#8217;une configuration pour une application Android passe donc par les étapes suivantes :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Créez un nouveau container (ce qui correspond à créer la configuration pour une application).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Donnez-lui le nom que vous voulez et sélectionnez le type &lt;code&gt;Android&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Une fois le container créé un code unique du type &lt;code&gt;GTM-XXXXXX&lt;/code&gt; lui est attribué par Google notez-le, il sera utilisé dans le code de l&amp;#8217;application Android.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensuite dans ce container rendez-vous dans la partie &lt;code&gt;Variables&lt;/code&gt; et créez une nouvelle variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choisissez le type &lt;code&gt;Value Collection&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Définissez sa valeur avec un objet json { &#39;clé&#39; : &#39;valeur&#39; }, la clé sera elle aussi réutilisée dans le code Android et la valeur peut être ce que vous souhaitez (ici un boolean ira très bien).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N&amp;#8217;oubliez d&amp;#8217;activer cette variable en sélectionnant Enable : &lt;code&gt;Always&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sauvegardez la variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vous pouvez dès à présent publier le container, il est prêt à être utilisé.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avant de quitter cet écran une dernière opération utile, téléchargez la première version publiée du container, il sera nécessaire de l&amp;#8217;embarquer dans le code source en tant que configuration initiale.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ces étapes sont résumées dans ces écrans :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;div style=&#34;text-align : center&#34;&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation1.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation1_min.png&#34; alt=&#34;Création du container&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation2.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création du container - Nom et type&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_containerCreation2_min.png&#34; alt=&#34;Création du container - Nom et type&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_gtmIdGenerated.png&#34; data-lightbox=&#34;0&#34; title=&#34;GTM id généré&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_gtmIdGenerated_min.png&#34; alt=&#34;GTM id généré&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_screenVariables.png&#34; data-lightbox=&#34;0&#34; title=&#34;Écran &#39;Variables&#39;&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_screenVariables_min.png&#34; alt=&#34;Écran &#39;Variables&#39;&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_createVariable.png&#34; data-lightbox=&#34;0&#34; title=&#34;Création d&amp;#8217;une nouvelle variable&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_createVariable_min.png&#34; alt=&#34;Création d&amp;#8217;une nouvelle variable&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_publishContainer.png&#34; data-lightbox=&#34;0&#34; title=&#34;Publication du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_publishContainer_min.png&#34; alt=&#34;Publication du container&#34;/&gt;
&lt;/a&gt;
&lt;a class=&#34;inlineBoxes&#34; href=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_downloadContainer.png&#34; data-lightbox=&#34;0&#34; title=&#34;Téléchargement du container&#34;&gt;
        &lt;img class=&#34;medium&#34; src=&#34;http://test.code-troopers.com/images/posts/2016-03-AndroidGoogleTagManager/GoogleTagManager_downloadContainer_min.png&#34; alt=&#34;Téléchargement du container&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;/div&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Normalement arrivé là, vous avez configuré un container avec une variable dans celui-ci. Et vous disposez pour ce container de son &lt;em&gt;code unique&lt;/em&gt; ainsi que d&amp;#8217;un &lt;em&gt;binaire&lt;/em&gt; de son contenu.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_application_android_le_code&#34;&gt;Application Android : Le code&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;La seconde partie du travail consiste à modifier son code applicatif afin de lire la variable précédemment ajoutée dans Google Tag Manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pour commencer, stockez votre code Google Tag Manager (dans une constante ou un ficher xml, peu importe).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&amp;lt;resources&amp;gt;
    &amp;lt;string name=&#34;tag_manager_id&#34;&amp;gt;GTM-N8NXMK&amp;lt;/string&amp;gt;
&amp;lt;/resources&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ensuite copiez le binaire téléchargé (correspondant à la configuration initiale du container) dans le répertoire &lt;em&gt;/res/raw/&lt;/em&gt;, attention vous devrez surement changer le nom du fichier pour enlever les majuscules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ajoutez dans votre &lt;em&gt;build.gradle&lt;/em&gt; une nouvelle dépendance vers les play services (seulement la partie analytics nous intéresse).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;dependencies {
    compile &#39;com.google.android.gms:play-services-analytics:8.4.0&#39;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Maintenant dans une Activity (ou bien dans votre Application), vous avez deux choses à faire, récupérer une instance de TagManager et faire une requête pour lire la configuration actuelle du Container.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final TagManager tagManager = TagManager.getInstance(this);
        PendingResult pending = tagManager.loadContainerPreferFresh(getString(R.string.tag_manager_id), R.raw.gtm_initial_conf);
        pending.setResultCallback(new ResultCallback&amp;lt;ContainerHolder&amp;gt;() {
           @Override
           public void onResult(@NonNull ContainerHolder containerHolder) {
               // If unsuccessful, return
               if (!containerHolder.getStatus().isSuccess()) {
                   // Deal with failure
                   return;
               }
               containerHolder.refresh();

               final boolean feature1Status = containerHolder.getContainer().getBoolean(&#34;feature1&#34;);
               Log.d(&#34;TagManager&#34;, String.valueOf(feature1Status));
           }
        }, 2, TimeUnit.SECONDS);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Et c&amp;#8217;est tout ! Vous pouvez retourner dans l&amp;#8217;interface de Tag Manager, pour modifier la valeur de la variable feature1, publiez la nouvelle version du container et si vous redémarrez l&amp;#8217;application,
 la nouvelle valeur devrait apparaitre.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rapide et efficace, non ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_chargement_des_données_du_container&#34;&gt;Chargement des données du container&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Via l&amp;#8217;instance de TagManager différentes méthodes sont disponibles pour charger le container et les valeurs qu&amp;#8217;il contient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;tagManager.loadContainerDefaultOnly(...); &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;
tagManager.loadContainerPreferFresh(...); &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;
tagManager.loadContainerPreferNonDefault(...); &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;va uniquement regarder les valeurs dans le binaire ajouté dans /res/raw&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vont essayer de prendre les dernières valeurs publiées (ou non) mais sans être garantie à 100% (notamment s&amp;#8217;il ya des problèmes de réseaux)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les différences sont détaillées &lt;a href=&#34;https://developers.google.com/android/reference/com/google/android/gms/tagmanager/TagManager#public-methods&#34;&gt;dans la doc&lt;/a&gt;.
Mais selon toute logique cette qui va nous intéresser sera uniquement &lt;code&gt;loadContainerPreferFresh()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Les pour et les contre d&amp;#8217;utiliser Tag Manager pour faire du feature toggle vont forcément dépendre du besoin du développeur.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_pour&#34;&gt;Pour&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Le principale avantage et la mise en place sans le développement d&amp;#8217;une API rien que pour ça (si votre application n&amp;#8217;a pas de backend dédié, pas besoin d&amp;#8217;en créer un).&lt;br&gt;
Toute la logique de configuration initiale versus configuration mise à jour est déjà implémentée et tout se gère via l&amp;#8217;appel &lt;code&gt;tagManager.loadContainer()&lt;/code&gt;.&lt;br&gt;
Ça fonctionne tout aussi bien sur iOS.&lt;br&gt;
Un autre point très intéressant (et non abordé ici) est la publication d&amp;#8217;une variable selon des critères (on va pouvoir modifier un toggle, pour par exemple faire du A/B testing en fonction d&amp;#8217;un tas de critères comme la taille de l&amp;#8217;écran ou bien la langue de l&amp;#8217;utilisateur ou même la version de l&amp;#8217;application).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_contre&#34;&gt;Contre&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Si le &lt;code&gt;loadPreferFresh&lt;/code&gt; échoue (problème réseau par exemple) on retombe sur la config par défaut, mais est-ce que ça fonctionnerait mieux avec une solution custom ? par sûr.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_liens&#34;&gt;Liens&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Code sources d&amp;#8217;exemple : &lt;a href=&#34;https://github.com/fchauveau/blog-android-tag-manager&#34; class=&#34;bare&#34;&gt;https://github.com/fchauveau/blog-android-tag-manager&lt;/a&gt;&lt;br&gt;
Documentation Google officielle : &lt;a href=&#34;https://developers.google.com/tag-manager/android/v4/&#34; class=&#34;bare&#34;&gt;https://developers.google.com/tag-manager/android/v4/&lt;/a&gt;&lt;br&gt;
Cours Udacity d&amp;#8217;explication : &lt;a href=&#34;https://www.udacity.com/course/viewer#!/c-ud876-2/l-4027658558/m-4328729937&#34; class=&#34;bare&#34;&gt;https://www.udacity.com/course/viewer#!/c-ud876-2/l-4027658558/m-4328729937&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>